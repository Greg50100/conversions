from conversions.conversion_frame import ConversionFrame
import math

class ConvertArea:
    units = ["square_meter",
            "square_kilometer",
            "square_mile",
            "square_yard",
            "square_foot",
            "square_inch",
            "hectare",
            "acre",
            "square_centimeter",
            "square_millimeter",
            "square_micrometer",
            "square_nanometer",
            "are",
            "barn",
            "centiare",
            "square_rod",
            "square_chain",
            "square_link",
            "dunam",
            "square_hectometer",
            "murabba",
            "gaj",
            "rai",
            "morgen",]

    def __init__(self, value=None):
        self.value = value
        self.unit_symbols = {
            "square_meter": "m²",
            "square_kilometer": "km²",
            "square_mile": "mi²",
            "square_yard": "yd²",
            "square_foot": "ft²",
            "square_inch": "in²",
            "hectare": "ha",
            "acre": "acre",
            "square_centimeter": "cm²",
            "square_millimeter": "mm²",
            "square_micrometer": "µm²",
            "square_nanometer": "nm²",
            "are": "a",
            "barn": "b",
            "centiare": "ca",
            "square_rod": "rd²",  # Symbol added
            "square_chain": "ch²",  # Symbol added
            "square_link": "li²",  # Symbol added
            "dunam": "dunam",  # Symbol added
            "square_hectometer": "hm²",  # Symbol added
            "murabba": "murabba",  # Symbol added
            "gaj": "gaj",  # Symbol added
            "rai": "rai",  # Symbol added
            "morgen": "Mg",  # Symbol added
        }
        self.conversions = {
            "square_meter": {
                "square_meter": lambda x: x,
                "square_kilometer": lambda x: x * 1e6,
                "square_mile": lambda x: x * 3.861e-7,
                "square_yard": lambda x: x * 1.196,
                "square_foot": lambda x: x * 10.764,
                "square_inch": lambda x: x * 1550,
                "hectare": lambda x: x * 0.0001,
                "acre": lambda x: x * 0.000247105,
                "square_centimeter": lambda x: x * 10000,
                "square_millimeter": lambda x: x * 1e6,
                "square_micrometer": lambda x: x * 1e12,
                "square_nanometer": lambda x: x * 1e18,
                "are": lambda x: x * 0.01,
                "barn": lambda x: x * 1e28,
                "centiare": lambda x: x * 100,
                "square_rod": lambda x: x * 0.0254,
                "square_chain": lambda x: x * 0.00247105,
                "square_link": lambda x: x * 24.7518,
                "dunam": lambda x: x * 0.001,
                "square_hectometer": lambda x: x * 0.0001,
                "murabba": lambda x: x * 0.00000988421,
                "gaj": lambda x: x * 1.19599,
                "rai": lambda x: x * 0.0001,
                "morgen": lambda x: x * 2500,
            },
            "square_kilometer": {
                "square_meter": lambda x: x * 1e6,
                "square_kilometer": lambda x: x,
                "square_mile": lambda x: x * 0.386102,
                "square_yard": lambda x: x * 1196000,
                "square_foot": lambda x: x * 10760000,
                "square_inch": lambda x: x * 1.55e9,
                "hectare": lambda x: x * 100,
                "acre": lambda x: x * 247.105,
                "square_centimeter": lambda x: x * 1e10,
                "square_millimeter": lambda x: x * 1e12,
                "square_micrometer": lambda x: x * 1e18,
                "square_nanometer": lambda x: x * 1e24,
                "are": lambda x: x * 100,
                "barn": lambda x: x * 1e34,
                "centiare": lambda x: x * 10000,
            },
            "square_mile": {
                "square_meter": lambda x: x * 2.59e6,
                "square_kilometer": lambda x: x * 2.59,
                "square_mile": lambda x: x,
                "square_yard": lambda x: x * 3.098e6,
                "square_foot": lambda x: x * 2.788e7,
                "square_inch": lambda x: x * 4.014e9,
                "hectare": lambda x: x * 259,
                "acre": lambda x: x * 640,
                "square_centimeter": lambda x: x * 2.59e10,
                "square_millimeter": lambda x: x * 2.59e12,
                "square_micrometer": lambda x: x * 2.59e18,
                "square_nanometer": lambda x: x * 2.59e24,
                "are": lambda x: x * 259,
                "barn": lambda x: x * 2.59e34,
            },
            "square_yard": {
                "square_meter": lambda x: x * 0.836127,
                "square_kilometer": lambda x: x * 8.3613e-7,
                "square_mile": lambda x: x * 3.2283e-7,
                "square_yard": lambda x: x,
                "square_foot": lambda x: x * 9,
                "square_inch": lambda x: x * 1296,
                "hectare": lambda x: x * 8.3613e-5,
                "acre": lambda x: x * 0.000206612,
                "square_centimeter": lambda x: x * 8361.27,
                "square_millimeter": lambda x: x * 836127,
                "square_micrometer": lambda x: x * 8.3613e10,
                "square_nanometer": lambda x: x * 8.3613e16,
                "are": lambda x: x * 0.00836127,
                "barn": lambda x: x * 8.3613e26,
            },
            "square_foot": {
                "square_meter": lambda x: x * 0.092903,
                "square_kilometer": lambda x: x * 9.2903e-8,
                "square_mile": lambda x: x * 3.587e-8,
                "square_yard": lambda x: x * 0.111111,
                "square_foot": lambda x: x,
                "square_inch": lambda x: x * 144,
                "hectare": lambda x: x * 9.2903e-6,
                "acre": lambda x: x * 2.2957e-5,
                "square_centimeter": lambda x: x * 929.03,
                "square_millimeter": lambda x: x * 92903,
                "square_micrometer": lambda x: x * 9.2903e9,
                "square_nanometer": lambda x: x * 9.2903e15,
                "are": lambda x: x * 0.00092903,
                "barn": lambda x: x * 9.2903e25,
            },
            "square_inch": {
                "square_meter": lambda x: x * 0.00064516,
                "square_kilometer": lambda x: x * 6.4516e-10,
                "square_mile": lambda x: x * 2.491e-10,
                "square_yard": lambda x: x * 0.000771605,
                "square_foot": lambda x: x * 0.00694444,
                "square_inch": lambda x: x,
                "hectare": lambda x: x * 6.4516e-8,
                "acre": lambda x: x * 1.5942e-7,
                "square_centimeter": lambda x: x * 6.4516,
                "square_millimeter": lambda x: x * 645.16,
                "square_micrometer": lambda x: x * 6.4516e7,
                "square_nanometer": lambda x: x * 6.4516e13,
                "are": lambda x: x * 6.4516e-8,
                "barn": lambda x: x * 6.4516e23,
            },
            "hectare": {
                "square_meter": lambda x: x * 10000,
                "square_kilometer": lambda x: x * 0.01,
                "square_mile": lambda x: x * 0.00386102,
                "square_yard": lambda x: x * 11960,
                "square_foot": lambda x: x * 107600,
                "square_inch": lambda x: x * 1.55e7,
                "hectare": lambda x: x,
                "acre": lambda x: x * 2.47105,
                "square_centimeter": lambda x: x * 1e8,
                "square_millimeter": lambda x: x * 1e10,
                "square_micrometer": lambda x: x * 1e16,
                "square_nanometer": lambda x: x * 1e22,
                "are": lambda x: x * 100,
                "barn": lambda x: x * 1e32,
            },
            "acre": {
                "square_meter": lambda x: x * 4046.86,
                "square_kilometer": lambda x: x * 0.00404686,
                "square_mile": lambda x: x * 0.0015625,
                "square_yard": lambda x: x * 4840,
                "square_foot": lambda x: x * 43560,
                "square_inch": lambda x: x * 6.273e6,
                "hectare": lambda x: x * 0.404686,
                "acre": lambda x: x,
                "square_centimeter": lambda x: x * 4.04686e7,
                "square_millimeter": lambda x: x * 4.04686e9,
                "square_micrometer": lambda x: x * 4.04686e15,
                "square_nanometer": lambda x: x * 4.04686e21,
                "are": lambda x: x * 40.4686,
                "barn": lambda x: x * 4.04686e31,
            },
            "square_centimeter": {
                "square_meter": lambda x: x * 0.0001,
                "square_kilometer": lambda x: x * 1e-10,
                "square_mile": lambda x: x * 3.861e-11,
                "square_yard": lambda x: x * 0.0001196,
                "square_foot": lambda x: x * 0.001076,
                "square_inch": lambda x: x * 0.155,
                "hectare": lambda x: x * 1e-8,
                "acre": lambda x: x * 2.471e-8,
                "square_centimeter": lambda x: x,
                "square_millimeter": lambda x: x * 100,
                "square_micrometer": lambda x: x * 1e8,
                "square_nanometer": lambda x: x * 1e14,
                "are": lambda x: x * 1e-6,
                "barn": lambda x: x * 1e22,
            },
            "square_millimeter": {
                "square_meter": lambda x: x * 1e-6,
                "square_kilometer": lambda x: x * 1e-12,
                "square_mile": lambda x: x * 3.861e-13,
                "square_yard": lambda x: x * 1.196e-6,
                "square_foot": lambda x: x * 1.076e-5,
                "square_inch": lambda x: x * 0.00155,
                "hectare": lambda x: x * 1e-10,
                "acre": lambda x: x * 2.471e-10,
                "square_centimeter": lambda x: x * 0.01,
                "square_millimeter": lambda x: x,
                "square_micrometer": lambda x: x * 1e6,
                "square_nanometer": lambda x: x * 1e12,
                "are": lambda x: x * 1e-8,
                "barn": lambda x: x * 1e26,
            },
            "square_micrometer": {
                "square_meter": lambda x: x * 1e-12,
                "square_kilometer": lambda x: x * 1e-18,
                "square_mile": lambda x: x * 3.861e-19,
                "square_yard": lambda x: x * 1.196e-12,
                "square_foot": lambda x: x * 1.076e-11,
                "square_inch": lambda x: x * 1.55e-9,
                "hectare": lambda x: x * 1e-16,
                "acre": lambda x: x * 2.471e-16,
                "square_centimeter": lambda x: x * 1e-8,
                "square_millimeter": lambda x: x * 1e-6,
                "square_micrometer": lambda x: x,
                "square_nanometer": lambda x: x * 1e6,
                "are": lambda x: x * 1e-14,
                "barn": lambda x: x * 1e32,
            },
            "square_nanometer": {
                "square_meter": lambda x: x * 1e-18,
                "square_kilometer": lambda x: x * 1e-24,
                "square_mile": lambda x: x * 3.861e-25,
                "square_yard": lambda x: x * 1.196e-18,
                "square_foot": lambda x: x * 1.076e-17,
                "square_inch": lambda x: x * 1.55e-15,
                "hectare": lambda x: x * 1e-22,
                "acre": lambda x: x * 2.471e-22,
                "square_centimeter": lambda x: x * 1e-14,
                "square_millimeter": lambda x: x * 1e-12,
                "square_micrometer": lambda x: x * 1e-6,
                "square_nanometer": lambda x: x,
                "are": lambda x: x * 1e-20,
                "barn": lambda x: x * 1e38,
            },
            "are": {
                "square_meter": lambda x: x * 100,
                "square_kilometer": lambda x: x * 0.01,
                "square_mile": lambda x: x * 0.00386102,
                "square_yard": lambda x: x * 119.6,
                "square_foot": lambda x: x * 1076,
                "square_inch": lambda x: x * 155000,
                "hectare": lambda x: x * 0.01,
                "acre": lambda x: x * 0.0247105,
                "square_centimeter": lambda x: x * 1000000,
                "square_millimeter": lambda x: x * 1e8,
                "square_micrometer": lambda x: x * 1e14,
                "square_nanometer": lambda x: x * 1e20,
                "are": lambda x: x,
                "barn": lambda x: x * 1e30,
            },
            "barn": {
                "square_meter": lambda x: x * 1e-28,
                "square_kilometer": lambda x: x * 1e-34,
                "square_mile": lambda x: x * 3.861e-35,
                "square_yard": lambda x: x * 1.196e-28,
                "square_foot": lambda x: x * 1.076e-27,
                "square_inch": lambda x: x * 1.55e-25,
                "hectare": lambda x: x * 1e-32,
                "acre": lambda x: x * 2.471e-32,
                "square_centimeter": lambda x: x * 1e-20,
                "square_millimeter": lambda x: x * 1e-18,
                "square_micrometer": lambda x: x * 1e-12,
                "square_nanometer": lambda x: x * 1e-6,
                "are": lambda x: x * 1e-30,
                "barn": lambda x: x,
            },
        }

    def get_formula(self, source_unit: str, target_unit: str) -> str:
        source_unit = source_unit.lower()
        target_unit = target_unit.lower()

        formulas = {
            "square_meter": {
                "square_meter": "x",
                "square_kilometer": "x * 0.000001",
                "square_mile": "x * 0.000000386102",
                "square_yard": "x * 1.196",
                "square_foot": "x * 1076",
                "square_inch": "x * 155000",
                "hectare": "x * 0.01",
                "acre": "x * 0.0247105",
                "square_centimeter": "x * 1000000",
                "square_millimeter": "x * 1e8",
                "square_micrometer": "x * 1e14",
                "square_nanometer": "x * 1e20",
                "are": "x",
                "barn": "x * 1e30",
            },
            "square_kilometer": {
                "square_meter": "x * 1e6",
                "square_kilometer": "x",
                "square_mile": "x * 0.386102",
                "square_yard": "x * 1196000",
                "square_foot": "x * 10760000",
                "square_inch": "x * 1.55e9",
                "hectare": "x * 100",
                "acre": "x * 247.105",
                "square_centimeter": "x * 1e10",
                "square_millimeter": "x * 1e12",
                "square_micrometer": "x * 1e18",
                "square_nanometer": "x * 1e24",
                "are": "x * 100",
                "barn": "x * 1e34",
            },
            "square_mile": {
                "square_meter": "x * 2.59e6",
                "square_kilometer": "x * 2.59",
                "square_mile": "x",
                "square_yard": "x * 3.098e6",
                "square_foot": "x * 2.788e7",
                "square_inch": "x * 4.014e9",
                "hectare": "x * 259",
                "acre": "x * 640",
                "square_centimeter": "x * 2.59e10",
                "square_millimeter": "x * 2.59e12",
                "square_micrometer": "x * 2.59e18",
                "square_nanometer": "x * 2.59e24",
                "are": "x * 259",
                "barn": "x * 2.59e34",
            },
            "square_yard": {
                "square_meter": "x * 0.836127",
                "square_kilometer": "x * 8.3613e-7",
                "square_mile": "x * 3.2283e-7",
                "square_yard": "x",
                "square_foot": "x * 9",
                "square_inch": "x * 1296",
                "hectare": "x * 8.3613e-5",
                "acre": "x * 0.000206612",
                "square_centimeter": "x * 8361.27",
                "square_millimeter": "x * 836127",
                "square_micrometer": "x * 8.3613e10",
                "square_nanometer": "x * 8.3613e16",
                "are": "x * 0.00836127",
                "barn": "x * 8.3613e26",
            },
            "square_foot": {
                "square_meter": "x * 0.092903",
                "square_kilometer": "x * 9.2903e-8",
                "square_mile": "x * 3.587e-8",
                "square_yard": "x * 0.111111",
                "square_foot": "x",
                "square_inch": "x * 144",
                "hectare": "x * 9.2903e-6",
                "acre": "x * 2.2957e-5",
                "square_centimeter": "x * 929.03",
                "square_millimeter": "x * 92903",
                "square_micrometer": "x * 9.2903e9",
                "square_nanometer": "x * 9.2903e15",
                "are": "x * 0.00092903",
                "barn": "x * 9.2903e25",
            },
            "square_inch": {
                "square_meter": "x * 0.00064516",
                "square_kilometer": "x * 6.4516e-10",
                "square_mile": "x * 2.491e-10",
                "square_yard": "x * 0.000771605",
                "square_foot": "x * 0.00694444",
                "square_inch": "x",
                "hectare": "x * 6.4516e-8",
                "acre": "x * 1.5942e-7",
                "square_centimeter": "x * 6.4516",
                "square_millimeter": "x * 645.16",
                "square_micrometer": "x * 6.4516e7",
                "square_nanometer": "x * 6.4516e13",
                "are": "x * 6.4516e-8",
                "barn": "x * 6.4516e23",
            },
            "hectare": {
                "square_meter": "x * 10000",
                "square_kilometer": "x * 0.01",
                "square_mile": "x * 0.00386102",
                "square_yard": "x * 11960",
                "square_foot": "x * 107600",
                "square_inch": "x * 1.55e7",
                "hectare": "x",
                "acre": "x * 2.47105",
                "square_centimeter": "x * 1e8",
                "square_millimeter": "x * 1e10",
                "square_micrometer": "x * 1e16",
                "square_nanometer": "x * 1e22",
                "are": "x * 100",
                "barn": "x * 1e32",
            },
            "acre": {
                "square_meter": "x * 4046.86",
                "square_kilometer": "x * 0.00404686",
                "square_mile": "x * 0.0015625",
                "square_yard": "x * 4840",
                "square_foot": "x * 43560",
                "square_inch": "x * 6.273e6",
                "hectare": "x * 0.404686",
                "acre": "x",
                "square_centimeter": "x * 4.04686e7",
                "square_millimeter": "x * 4.04686e9",
                "square_micrometer": "x * 4.04686e15",
                "square_nanometer": "x * 4.04686e21",
                "are": "x * 40.4686",
                "barn": "x * 4.04686e31",
            },
            "square_centimeter": {
                "square_meter": "x * 0.0001",
                "square_kilometer": "x * 1e-10",
                "square_mile": "x * 3.861e-11",
                "square_yard": "x * 0.0001196",
                "square_foot": "x * 0.001076",
                "square_inch": "x * 0.155",
                "hectare": "x * 1e-8",
                "acre": "x * 2.471e-8",
                "square_centimeter": "x",
                "square_millimeter": "x * 100",
                "square_micrometer": "x * 1e8",
                "square_nanometer": "x * 1e14",
                "are": "x * 1e-6",
                "barn": "x * 1e22",
            },
            "square_millimeter": {
                "square_meter": "x * 1e-6",
                "square_kilometer": "x * 1e-12",
                "square_mile": "x * 3.861e-13",
                "square_yard": "x * 1.196e-6",
                "square_foot": "x * 1.076e-5",
                "square_inch": "x * 0.00155",
                "hectare": "x * 1e-10",
                "acre": "x * 2.471e-10",
                "square_centimeter": "x * 0.01",
                "square_millimeter": "x",
                "square_micrometer": "x * 1e6",
                "square_nanometer": "x * 1e12",
                "are": "x * 1e-8",
                "barn": "x * 1e26",
            },
            "square_micrometer": {
                "square_meter": "x * 1e-12",
                "square_kilometer": "x * 1e-18",
                "square_mile": "x * 3.861e-19",
                "square_yard": "x * 1.196e-12",
                "square_foot": "x * 1.076e-11",
                "square_inch": "x * 1.55e-9",
                "hectare": "x * 1e-16",
                "acre": "x * 2.471e-16",
                "square_centimeter": "x * 1e-8",
                "square_millimeter": "x * 1e-6",
                "square_micrometer": "x",
                "square_nanometer": "x * 1e6",
                "are": "x * 1e-14",
                "barn": "x * 1e32",
            },
            "square_nanometer": {
                "square_meter": "x * 1e-18",
                "square_kilometer": "x * 1e-24",
                "square_mile": "x * 3.861e-25",
                "square_yard": "x * 1.196e-18",
                "square_foot": "x * 1.076e-17",
                "square_inch": "x * 1.55e-15",
                "hectare": "x * 1e-22",
                "acre": "x * 2.471e-22",
                "square_centimeter": "x * 1e-14",
                "square_millimeter": "x * 1e-12",
                "square_micrometer": "x * 1e-6",
                "square_nanometer": "x",
                "are": "x * 1e-20",
                "barn": "x * 1e38",
            },
            "are": {
                "square_meter": "x * 100",
                "square_kilometer": "x * 0.01",
                "square_mile": "x * 0.00386102",
                "square_yard": "x * 119.6",
                "square_foot": "x * 1076",
                "square_inch": "x * 155000",
                "hectare": "x * 0.01",
                "acre": "x * 0.0247105",
                "square_centimeter": "x * 1000000",
                "square_millimeter": "x * 1e8",
                "square_micrometer": "x * 1e14",
                "square_nanometer": "x * 1e20",
                "are": "x",
                "barn": "x * 1e30",
            },
            "barn": {
                "square_meter": "x * 1e-28",
                "square_kilometer": "x * 1e-34",
                "square_mile": "x * 3.861e-35",
                "square_yard": "x * 1.196e-28",
                "square_foot": "x * 1.076e-27",
                "square_inch": "x * 1.55e-25",
                "hectare": "x * 1e-32",
                "acre": "x * 2.471e-32",
                "square_centimeter": "x * 1e-20",
                "square_millimeter": "x * 1e-18",
                "square_micrometer": "x * 1e-12",
                "square_nanometer": "x * 1e-6",
                "are": "x * 1e-30",
                "barn": "x",
            },
        }

        if source_unit in formulas and target_unit in formulas[source_unit]:
            formula = formulas[source_unit][target_unit]
            return formula
        else:
            return "Formule non disponible."

    def convert(self, area, original_unit, unit):
        source_unit = original_unit.lower()
        target_unit = unit.lower()

        if (
            source_unit in self.conversions
            and target_unit in self.conversions[source_unit]
        ):
            conversion_func = self.conversions[source_unit][target_unit]
            return conversion_func(area)
        else:
            raise ValueError("Unité cible non prise en charge.")

class AreaFrame(ConversionFrame):
    def __init__(self, parent, conversion_func, error_callback):
        super().__init__(parent, conversion_func, ConvertArea.units, error_callback)

