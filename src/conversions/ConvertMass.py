from conversions.conversion_frame import ConversionFrame
import math

class ConvertMass:
    units = [
            "gram",
            "kilogram",
            "tonne",
            "pound",
            "ounce",
            "stone",
            "milligram",
            "microgram",
            "metric_ton",
            "short_ton",
            "long_ton",
            "carat",
            "grain",
            "troy_ounce",
            "troy_pound"
        ]
    def __init__(self, value=None):
        self.value = value
        self.unit_symbols = {
            "gram": "g",
            "kilogram": "kg",
            "tonne": "t",
            "pound": "lb",
            "ounce": "oz",
            "stone": "st",
            "milligram": "mg",
            "microgram": "Âµg",
            "metric_ton": "MT",
            "short_ton": "short tn",
            "long_ton": "long tn",
            "carat": "ct",
            "grain": "gr",
            "troy_ounce": "oz t",
            "troy_pound": "lb t"
        }
        self.conversions = {
            "gram": {
                "gram": lambda x: x,
                "kilogram": lambda x: x / 1000,
                "tonne": lambda x: x / 1e6,
                "pound": lambda x: x * 0.00220462,
                "ounce": lambda x: x * 0.035274,
                "stone": lambda x: x * 0.000157473,
                "milligram": lambda x: x * 1000,
                "microgram": lambda x: x * 1e6,
                "metric_ton": lambda x: x / 1e6,
                "short_ton": lambda x: x * 0.000453592,
                "long_ton": lambda x: x * 0.000446429,
                "carat": lambda x: x * 5,
                "grain": lambda x: x * 15.4324,
                "troy_ounce": lambda x: x * 0.0321507,
                "troy_pound": lambda x: x * 0.00267923
            },
            "kilogram": {
                "gram": lambda x: x * 1000,
                "kilogram": lambda x: x,
                "tonne": lambda x: x / 1000,
                "pound": lambda x: x * 2.20462,
                "ounce": lambda x: x * 35.274,
                "stone": lambda x: x * 0.157473,
                "milligram": lambda x: x * 1e6,
                "microgram": lambda x: x * 1e9,
                "metric_ton": lambda x: x / 1000,
                "short_ton": lambda x: x * 0.00110231,
                "long_ton": lambda x: x * 0.000984207,
                "carat": lambda x: x * 5000,
                "grain": lambda x: x * 15432.4,
                "troy_ounce": lambda x: x * 32.1507,
                "troy_pound": lambda x: x * 2.67923
            },
            "tonne": {
                "gram": lambda x: x * 1e6,
                "kilogram": lambda x: x * 1000,
                "tonne": lambda x: x,
                "pound": lambda x: x * 2204.62,
                "ounce": lambda x: x * 35274,
                "stone": lambda x: x * 157.473,
                "milligram": lambda x: x * 1e9,
                "microgram": lambda x: x * 1e12,
                "metric_ton": lambda x: x,
                "short_ton": lambda x: x * 1.10231,
                "long_ton": lambda x: x * 0.984207,
                "carat": lambda x: x * 5e6,
                "grain": lambda x: x * 1.54324e7,
                "troy_ounce": lambda x: x * 3.21507e4,
                "troy_pound": lambda x: x * 2.67923e3
            },
            "pound": {
                "gram": lambda x: x / 0.00220462,
                "kilogram": lambda x: x / 2.20462,
                "tonne": lambda x: x / 2204.62,
                "pound": lambda x: x,
                "ounce": lambda x: x * 16,
                "stone": lambda x: x * 0.0714286,
                "milligram": lambda x: x * 453592,
                "microgram": lambda x: x * 4.53592e8,
                "metric_ton": lambda x: x * 0.000453592,
                "short_ton": lambda x: x * 0.0005,
                "long_ton": lambda x: x * 0.000446429,
                "carat": lambda x: x * 2267.96,
                "grain": lambda x: x * 7000,
                "troy_ounce": lambda x: x * 14.5833,
                "troy_pound": lambda x: x * 0.822857
            },
            "ounce": {
                "gram": lambda x: x / 0.035274,
                "kilogram": lambda x: x / 35.274,
                "tonne": lambda x: x / 35274,
                "pound": lambda x: x / 16,
                "ounce": lambda x: x,
                "stone": lambda x: x * 0.00446429,
                "milligram": lambda x: x * 28349.5,
                "microgram": lambda x: x * 2.83495e7,
                "metric_ton": lambda x: x * 2.83495e-5,
                "short_ton": lambda x: x * 3.125e-5,
                "long_ton": lambda x: x * 2.7902e-5,
                "carat": lambda x: x * 141.748,
                "grain": lambda x: x * 437.5,
                "troy_ounce": lambda x: x * 0.911458,
                "troy_pound": lambda x: x * 0.0571429
            },
            "stone": {
                "gram": lambda x: x / 0.000157473,
                "kilogram": lambda x: x / 0.157473,
                "tonne": lambda x: x / 157.473,
                "pound": lambda x: x / 0.0714286,
                "ounce": lambda x: x / 0.00446429,
                "stone": lambda x: x,
                "milligram": lambda x: x * 6350293.18,
                "microgram": lambda x: x * 6.35029e9,
                "metric_ton": lambda x: x * 6.35029e-4,
                "short_ton": lambda x: x * 0.0007,
                "long_ton": lambda x: x * 0.000625,
                "carat": lambda x: x * 31751.5,
                "grain": lambda x: x * 98000,
                "troy_ounce": lambda x: x * 204.167,
                "troy_pound": lambda x: x * 14.5833
            },
            "milligram": {
                "gram": lambda x: x / 1000,
                "kilogram": lambda x: x / 1e6,
                "tonne": lambda x: x / 1e9,
                "pound": lambda x: x * 2.20462e-6,
                "ounce": lambda x: x * 3.5274e-5,
                "stone": lambda x: x * 1.57473e-7,
                "milligram": lambda x: x,
                "microgram": lambda x: x * 1000,
                "metric_ton": lambda x: x / 1e9,
                "short_ton": lambda x: x * 1.10231e-9,
                "long_ton": lambda x: x * 9.8421e-10,
                "carat": lambda x: x * 5e-3,
                "grain": lambda x: x * 15.4324e-3,
                "troy_ounce": lambda x: x * 3.21507e-2,
                "troy_pound": lambda x: x * 2.67923e-3
            },
            "microgram": {
                "gram": lambda x: x / 1e6,
                "kilogram": lambda x: x / 1e9,
                "tonne": lambda x: x / 1e12,
                "pound": lambda x: x * 2.20462e-9,
                "ounce": lambda x: x * 3.5274e-8,
                "stone": lambda x: x * 1.57473e-10,
                "milligram": lambda x: x / 1000,
                "microgram": lambda x: x,
                "metric_ton": lambda x: x / 1e12,
                "short_ton": lambda x: x * 1.10231e-12,
                "long_ton": lambda x: x * 9.8421e-13,
                "carat": lambda x: x * 5e-6,
                "grain": lambda x: x * 15.4324e-6,
                "troy_ounce": lambda x: x * 3.21507e-5,
                "troy_pound": lambda x: x * 2.67923e-6
            },
            "metric_ton": {
                "gram": lambda x: x * 1e6,
                "kilogram": lambda x: x * 1000,
                "tonne": lambda x: x * 1e6,
                "pound": lambda x: x * 2204.62,
                "ounce": lambda x: x * 35274,
                "stone": lambda x: x * 157.473,
                "milligram": lambda x: x * 1e9,
                "microgram": lambda x: x * 1e12,
                "metric_ton": lambda x: x,
                "short_ton": lambda x: x * 1.10231e3,
                "long_ton": lambda x: x * 0.984207,
                "carat": lambda x: x * 5e6,
                "grain": lambda x: x * 1.54324e7,
                "troy_ounce": lambda x: x * 3.21507e4,
                "troy_pound": lambda x: x * 2.67923e3
            },
            "short_ton": {
                "gram": lambda x: x / 0.00220462,
                "kilogram": lambda x: x / 2.20462,
                "tonne": lambda x: x / 2204.62,
                "pound": lambda x: x,
                "ounce": lambda x: x * 16,
                "stone": lambda x: x * 0.0714286,
                "milligram": lambda x: x * 453592,
                "microgram": lambda x: x * 4.53592e8,
                "metric_ton": lambda x: x * 0.000453592,
                "short_ton": lambda x: x,
                "long_ton": lambda x: x * 0.892857,
                "carat": lambda x: x * 2267960,
                "grain": lambda x: x * 7000,
                "troy_ounce": lambda x: x * 14583.3,
                "troy_pound": lambda x: x * 1028.57
            },
            "long_ton": {
                "gram": lambda x: x / 0.00220462,
                "kilogram": lambda x: x / 2.20462,
                "tonne": lambda x: x / 2204.62,
                "pound": lambda x: x,
                "ounce": lambda x: x * 16,
                "stone": lambda x: x * 0.0714286,
                "milligram": lambda x: x * 453592,
                "microgram": lambda x: x * 4.53592e8,
                "metric_ton": lambda x: x * 0.000453592,
                "short_ton": lambda x: x * 1.12,
                "long_ton": lambda x: x
            },
            "carat": {
                "gram": lambda x: x * 0.2,
                "kilogram": lambda x: x * 2e-4,
                "tonne": lambda x: x * 2e-7,
                "pound": lambda x: x * 0.000440925,
                "ounce": lambda x: x * 0.00705479,
                "stone": lambda x: x * 3.5274e-5,
                "milligram": lambda x: x * 200,
                "microgram": lambda x: x * 200000,
                "metric_ton": lambda x: x * 2e-7,
                "short_ton": lambda x: x * 2.2046e-7,
                "long_ton": lambda x: x * 1.9685e-7,
                "carat": lambda x: x,
                "grain": lambda x: x * 3.08647,
                "troy_ounce": lambda x: x * 0.00643015,
                "troy_pound": lambda x: x * 0.00053524
            },
            "grain": {
                "gram": lambda x: x * 0.0647989,
                "kilogram": lambda x: x * 6.47989e-5,
                "tonne": lambda x: x * 6.47989e-8,
                "pound": lambda x: x * 0.000142857,
                "ounce": lambda x: x * 0.00228571,
                "stone": lambda x: x * 1.02041e-5,
                "milligram": lambda x: x * 64.7989,
                "microgram": lambda x: x * 6.47989e4,
                "metric_ton": lambda x: x * 6.47989e-8,
                "short_ton": lambda x: x * 1.42857e-7,
                "long_ton": lambda x: x * 1.27559e-7,
                "carat": lambda x: x * 0.324,
                "grain": lambda x: x,
                "troy_ounce": lambda x: x * 0.00208333,
                "troy_pound": lambda x: x * 0.000173611
            },
            "troy_ounce": {
                "gram": lambda x: x * 31.1035,
                "kilogram": lambda x: x * 0.0311035,
                "tonne": lambda x: x * 3.11035e-5,
                "pound": lambda x: x * 0.0685714,
                "ounce": lambda x: x * 480,
                "stone": lambda x: x * 0.00423288,
                "milligram": lambda x: x * 31103.5,
                "microgram": lambda x: x * 3.11035e7,
                "metric_ton": lambda x: x * 3.11035e-5,
                "short_ton": lambda x: x * 3.42857e-5,
                "long_ton": lambda x: x * 3.06122e-5,
                "carat": lambda x: x * 155.517,
                "grain": lambda x: x * 480,
                "troy_ounce": lambda x: x,
                "troy_pound": lambda x: x * 0.0833333
            },
            "troy_pound": {
                "gram": lambda x: x * 373.242,
                "kilogram": lambda x: x * 0.373242,
                "tonne": lambda x: x * 3.73242e-4,
                "pound": lambda x: x * 12,
                "ounce": lambda x: x * 240,
                "stone": lambda x: x * 0.0214286,
                "milligram": lambda x: x * 373242,
                "microgram": lambda x: x * 3.73242e8,
                "metric_ton": lambda x: x * 3.73242e-4,
                "short_ton": lambda x: x * 4.10714e-4,
                "long_ton": lambda x: x * 3.66071e-4,
                "carat": lambda x: x * 1868.04,
                "grain": lambda x: x * 5760,
                "troy_ounce": lambda x: x * 12,
                "troy_pound": lambda x: x
            }
        }

    def get_formula(self, source_unit: str, target_unit: str) -> str:
        source_unit = source_unit.lower()
        target_unit = target_unit.lower()

        formulas = {
            "gram": {
                "gram": "x",
                "kilogram": "x / 1000",
                "tonne": "x / 1e6",
                "pound": "x * 0.00220462",
                "ounce": "x * 0.035274",
                "stone": "x * 0.000157473",
                "milligram": "x * 1000",
                "microgram": "x * 1e6",
                "metric_ton": "x / 1e6",
                "short_ton": "x * 0.000453592",
                "long_ton": "x * 0.000446429",
                "carat": "x * 5",
                "grain": "x * 15.4324",
                "troy_ounce": "x * 0.0321507",
                "troy_pound": "x * 0.00267923"
            },
            "kilogram": {
                "gram": "x * 1000",
                "kilogram": "x",
                "tonne": "x / 1000",
                "pound": "x * 2.20462",
                "ounce": "x * 35.274",
                "stone": "x * 0.157473",
                "milligram": "x * 1e6",
                "microgram": "x * 1e9",
                "metric_ton": "x / 1000",
                "short_ton": "x * 0.00110231",
                "long_ton": "x * 0.000984207",
                "carat": "x * 5000",
                "grain": "x * 15432.4",
                "troy_ounce": "x * 32.1507",
                "troy_pound": "x * 2.67923"
            },
            "tonne": {
                "gram": "x * 1e6",
                "kilogram": "x * 1000",
                "tonne": "x",
                "pound": "x * 2204.62",
                "ounce": "x * 35274",
                "stone": "x * 157.473",
                "milligram": "x * 1e9",
                "microgram": "x * 1e12",
                "metric_ton": "x",
                "short_ton": "x * 1.10231",
                "long_ton": "x * 0.984207",
                "carat": "x * 5e6",
                "grain": "x * 1.54324e7",
                "troy_ounce": "x * 3.21507e4",
                "troy_pound": "x * 2.67923e3"
            },
            "pound": {
                "gram": "x / 0.00220462",
                "kilogram": "x / 2.20462",
                "tonne": "x / 2204.62",
                "pound": "x",
                "ounce": "x * 16",
                "stone": "x * 0.0714286",
                "milligram": "x * 453592",
                "microgram": "x * 4.53592e8",
                "metric_ton": "x * 0.000453592",
                "short_ton": "x * 0.0005",
                "long_ton": "x * 0.000446429",
                "carat": "x * 2267.96",
                "grain": "x * 7000",
                "troy_ounce": "x * 14.5833",
                "troy_pound": "x * 0.822857"
            },
            "ounce": {
                "gram": "x / 0.035274",
                "kilogram": "x / 35.274",
                "tonne": "x / 35274",
                "pound": "x / 16",
                "ounce": "x",
                "stone": "x * 0.00446429",
                "milligram": "x * 28349.5",
                "microgram": "x * 2.83495e7",
                "metric_ton": "x * 2.83495e-5",
                "short_ton": "x * 3.125e-5",
                "long_ton": "x * 2.7902e-5",
                "carat": "x * 141.748",
                "grain": "x * 437.5",
                "troy_ounce": "x * 0.911458",
                "troy_pound": "x * 0.0571429"
            },
            "stone": {
                "gram": "x / 0.000157473",
                "kilogram": "x / 0.157473",
                "tonne": "x / 157.473",
                "pound": "x / 0.0714286",
                "ounce": "x / 0.00446429",
                "stone": "x",
                "milligram": "x * 6350293.18",
                "microgram": "x * 6.35029e9",
                "metric_ton": "x * 6.35029e-4",
                "short_ton": "x * 0.0007",
                "long_ton": "x * 0.000625",
                "carat": "x * 31751.5",
                "grain": "x * 98000",
                "troy_ounce": "x * 204.167",
                "troy_pound": "x * 14.5833"
            },
            "milligram": {
                "gram": "x / 1000",
                "kilogram": "x / 1e6",
                "tonne": "x / 1e9",
                "pound": "x * 2.20462e-6",
                "ounce": "x * 3.5274e-5",
                "stone": "x * 1.57473e-7",
                "milligram": "x",
                "microgram": "x * 1000",
                "metric_ton": "x / 1e9",
                "short_ton": "x * 1.10231e-9",
                "long_ton": "x * 9.8421e-10",
                "carat": "x * 5e-3",
                "grain": "x * 15.4324e-3",
                "troy_ounce": "x * 3.21507e-2",
                "troy_pound": "x * 2.67923e-3"
            },
            "microgram": {
                "gram": "x / 1e6",
                "kilogram": "x / 1e9",
                "tonne": "x / 1e12",
                "pound": "x * 2.20462e-9",
                "ounce": "x * 3.5274e-8",
                "stone": "x * 1.57473e-10",
                "milligram": "x / 1000",
                "microgram": "x",
                "metric_ton": "x / 1e12",
                "short_ton": "x * 1.10231e-12",
                "long_ton": "x * 9.8421e-13",
                "carat": "x * 5e-6",
                "grain": "x * 15.4324e-6",
                "troy_ounce": "x * 3.21507e-5",
                "troy_pound": "x * 2.67923e-6"
            },
            "metric_ton": {
                "gram": "x * 1e6",
                "kilogram": "x * 1000",
                "tonne": "x * 1e6",
                "pound": "x * 2204.62",
                "ounce": "x * 35274",
                "stone": "x * 157.473",
                "milligram": "x * 1e9",
                "microgram": "x * 1e12",
                "metric_ton": "x",
                "short_ton": "x * 1.10231e3",
                "long_ton": "x * 0.984207",
                "carat": "x * 5e6",
                "grain": "x * 1.54324e7",
                "troy_ounce": "x * 3.21507e4",
                "troy_pound": "x * 2.67923e3"
            },
            "short_ton": {
                "gram": "x / 0.00220462",
                "kilogram": "x / 2.20462",
                "tonne": "x / 2204.62",
                "pound": "x",
                "ounce": "x * 16",
                "stone": "x * 0.0714286",
                "milligram": "x * 453592",
                "microgram": "x * 4.53592e8",
                "metric_ton": "x * 0.000453592",
                "short_ton": "x",
                "long_ton": "x * 0.892857",
                "carat": "x * 2267960",
                "grain": "x * 7000",
                "troy_ounce": "x * 14583.3",
                "troy_pound": "x * 1028.57"
            },
            "long_ton": {
                "gram": "x / 0.00220462",
                "kilogram": "x / 2.20462",
                "tonne": "x / 2204.62",
                "pound": "x",
                "ounce": "x * 16",
                "stone": "x * 0.0714286",
                "milligram": "x * 453592",
                "microgram": "x * 4.53592e8",
                "metric_ton": "x * 0.000453592",
                "short_ton": "x * 1.12",
                "long_ton": "x"
            },
            "carat": {
                "gram": "x * 0.2",
                "kilogram": "x * 2e-4",
                "tonne": "x * 2e-7",
                "pound": "x * 0.000440925",
                "ounce": "x * 0.00705479",
                "stone": "x * 3.5274e-5",
                "milligram": "x * 200",
                "microgram": "x * 200000",
                "metric_ton": "x * 2e-7",
                "short_ton": "x * 2.2046e-7",
                "long_ton": "x * 1.9685e-7",
                "carat": "x",
                "grain": "x * 3.08647",
                "troy_ounce": "x * 0.00643015",
                "troy_pound": "x * 0.00053524"
            },
            "grain": {
                "gram": "x * 0.0647989",
                "kilogram": "x * 6.47989e-5",
                "tonne": "x * 6.47989e-8",
                "pound": "x * 0.000142857",
                "ounce": "x * 0.00228571",
                "stone": "x * 1.02041e-5",
                "milligram": "x * 64.7989",
                "microgram": "x * 6.47989e4",
                "metric_ton": "x * 6.47989e-8",
                "short_ton": "x * 1.42857e-7",
                "long_ton": "x * 1.27559e-7",
                "carat": "x * 0.324",
                "grain": "x",
                "troy_ounce": "x * 0.00208333",
                "troy_pound": "x * 0.000173611"
            },
            "troy_ounce": {
                "gram": "x * 31.1035",
                "kilogram": "x * 0.0311035",
                "tonne": "x * 3.11035e-5",
                "pound": "x * 0.0685714",
                "ounce": "x * 480",
                "stone": "x * 0.00423288",
                "milligram": "x * 31103.5",
                "microgram": "x * 3.11035e7",
                "metric_ton": "x * 3.11035e-5",
                "short_ton": "x * 3.42857e-5",
                "long_ton": "x * 3.06122e-5",
                "carat": "x * 155.517",
                "grain": "x * 480",
                "troy_ounce": "x",
                "troy_pound": "x * 0.0833333"
            },
            "troy_pound": {
                "gram": "x * 373.242",
                "kilogram": "x * 0.373242",
                "tonne": "x * 3.73242e-4",
                "pound": "x * 12",
                "ounce": "x * 240",
                "stone": "x * 0.0214286",
                "milligram": "x * 373242",
                "microgram": "x * 3.73242e8",
                "metric_ton": "x * 3.73242e-4",
                "short_ton": "x * 4.10714e-4",
                "long_ton": "x * 3.66071e-4",
                "carat": "x * 1868.04",
                "grain": "x * 5760",
                "troy_ounce": "x * 12",
                "troy_pound": "x"
            }
        }

        if source_unit in formulas and target_unit in formulas[source_unit]:
            formula = formulas[source_unit][target_unit]
            return formula
        else:
            return "Formule non disponible."

    def convert(self, mass, original_unit, unit):
        source_unit = original_unit.lower()
        target_unit = unit.lower()

        if (
            source_unit in self.conversions
            and target_unit in self.conversions[source_unit]
        ):
            conversion_func = self.conversions[source_unit][target_unit]
            return conversion_func(self.value)
        else:
            raise ValueError("UnitÃ© cible non prise en charge.")
class MassFrame(ConversionFrame):
    def __init__(self, parent, conversion_func, error_callback):
        super().__init__(parent, conversion_func, ConvertMass.units, error_callback)
