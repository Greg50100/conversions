from conversions.conversion_frame import ConversionFrame
import math

class ConvertComputerValues:
    units = [
            "bits",
            "bytes",
            "kilobits",
            "kilobytes",
            "megabits",
            "megabytes",
            "gigabits",
            "gigabytes",
            "terabits",
            "terabytes",
            "petabits",
            "petabytes",
            "exabits",
            "exabytes",
            "zettabits",
            "zettabytes",
            "yottabits",
            "yottabytes",
        ]

    def __init__(self, value=None):
        self.value = value
        self.unit_symbols = {
            "bits": "b",
            "bytes": "B",
            "kilobits": "Kb",
            "kilobytes": "KB",
            "megabits": "Mb",
            "megabytes": "MB",
            "gigabits": "Gb",
            "gigabytes": "GB",
            "terabits": "Tb",
            "terabytes": "TB",
            "petabits": "Pb",
            "petabytes": "PB",
            "exabits": "Eb",
            "exabytes": "EB",
            "zettabits": "Zb",
            "zettabytes": "ZB",
            "yottabits": "Yb",
            "yottabytes": "YB",
        }
        self.conversions = {
            "bits": {
                "bits": lambda x: x,
                "bytes": lambda x: x / 8,
                "kilobits": lambda x: x / 1000,
                "kilobytes": lambda x: x / 8000,
                "megabits": lambda x: x / 10**6,
                "megabytes": lambda x: x / 8 * 10**6,
                "gigabits": lambda x: x / 10**9,
                "gigabytes": lambda x: x / 8 * 10**9,
                "terabits": lambda x: x / 10**12,
                "terabytes": lambda x: x / 8 * 10**12,
                "petabits": lambda x: x / 10**15,
                "petabytes": lambda x: x / 8 * 10**15,
                "exabits": lambda x: x / 10**18,
                "exabytes": lambda x: x / 8 * 10**18,
                "zettabits": lambda x: x / 10**21,
                "zettabytes": lambda x: x / 8 * 10**21,
                "yottabits": lambda x: x / 10**24,
                "yottabytes": lambda x: x / 8 * 10**24,
            },
            "bytes": {
                "bits": lambda x: x * 8,
                "bytes": lambda x: x,
                "kilobits": lambda x: x * 8 / 1000,
                "kilobytes": lambda x: x / 1024,
                "megabits": lambda x: x * 8 / 10**6,
                "megabytes": lambda x: x / (1024**2),
                "gigabits": lambda x: x * 8 / 10**9,
                "gigabytes": lambda x: x / (1024**3),
                "terabits": lambda x: x * 8 / 10**12,
                "terabytes": lambda x: x / (1024**4),
                "petabits": lambda x: x * 8 / 10**15,
                "petabytes": lambda x: x / (1024**5),
                "exabits": lambda x: x * 8 / 10**18,
                "exabytes": lambda x: x / (1024**6),
                "zettabits": lambda x: x * 8 / 10**21,
                "zettabytes": lambda x: x / (1024**7),
                "yottabits": lambda x: x * 8 / 10**24,
                "yottabytes": lambda x: x / (1024**8),
            },
            "kilobits": {
                "bits": lambda x: x * 1000,
                "bytes": lambda x: x * 1000 / 8,
                "kilobits": lambda x: x,
                "kilobytes": lambda x: x / 8,
                "megabits": lambda x: x / 1000,
                "megabytes": lambda x: x / 8000,
                "gigabits": lambda x: x / 10**6,
                "gigabytes": lambda x: x / 8 * 10**6,
                "terabits": lambda x: x / 10**9,
                "terabytes": lambda x: x / 8 * 10**9,
                "petabits": lambda x: x / 10**12,
                "petabytes": lambda x: x / 8 * 10**12,
                "exabits": lambda x: x / 10**15,
                "exabytes": lambda x: x / 8 * 10**15,
                "zettabits": lambda x: x / 10**18,
                "zettabytes": lambda x: x / 8 * 10**18,
                "yottabits": lambda x: x / 10**21,
                "yottabytes": lambda x: x / 8 * 10**21,
            },
            "kilobytes": {
                "bits": lambda x: x * 8000,
                "bytes": lambda x: x * 1024,
                "kilobits": lambda x: x * 8,
                "kilobytes": lambda x: x,
                "megabits": lambda x: x * 8 / 1000,
                "megabytes": lambda x: x / 1000,
                "gigabits": lambda x: x * 8 / 10**6,
                "gigabytes": lambda x: x / 10**6,
                "terabits": lambda x: x * 8 / 10**9,
                "terabytes": lambda x: x / 10**9,
                "petabits": lambda x: x * 8 / 10**12,
                "petabytes": lambda x: x / 10**12,
                "exabits": lambda x: x * 8 / 10**15,
                "exabytes": lambda x: x / 10**15,
                "zettabits": lambda x: x * 8 / 10**18,
                "zettabytes": lambda x: x / 10**18,
                "yottabits": lambda x: x * 8 / 10**21,
                "yottabytes": lambda x: x / 10**21,
            },
            "megabits": {
                "bits": lambda x: x * 10**6,
                "bytes": lambda x: x * 10**6 / 8,
                "kilobits": lambda x: x * 1000,
                "kilobytes": lambda x: x * 1000 / 8,
                "megabits": lambda x: x,
                "megabytes": lambda x: x / 8,
                "gigabits": lambda x: x / 1000,
                "gigabytes": lambda x: x / 8 * 1000,
                "terabits": lambda x: x / 10**6,
                "terabytes": lambda x: x / 8 * 10**6,
                "petabits": lambda x: x / 10**9,
                "petabytes": lambda x: x / 8 * 10**9,
                "exabits": lambda x: x / 10**12,
                "exabytes": lambda x: x / 8 * 10**12,
                "zettabits": lambda x: x / 10**15,
                "zettabytes": lambda x: x / 8 * 10**15,
                "yottabits": lambda x: x / 10**18,
                "yottabytes": lambda x: x / 8 * 10**18,
            },
            "megabytes": {
                "bits": lambda x: x * 8 * 10**6,
                "bytes": lambda x: x * 10**6,
                "kilobits": lambda x: x * 8 * 1000,
                "kilobytes": lambda x: x * 1000,
                "megabits": lambda x: x * 8,
                "megabytes": lambda x: x,
                "gigabits": lambda x: x * 8 / 1000,
                "gigabytes": lambda x: x / 1000,
                "terabits": lambda x: x * 8 / 10**6,
                "terabytes": lambda x: x / 10**6,
                "petabits": lambda x: x * 8 / 10**9,
                "petabytes": lambda x: x / 10**9,
                "exabits": lambda x: x * 8 / 10**12,
                "exabytes": lambda x: x / 10**12,
                "zettabits": lambda x: x * 8 / 10**15,
                "zettabytes": lambda x: x / 10**15,
                "yottabits": lambda x: x * 8 / 10**18,
                "yottabytes": lambda x: x / 10**18,
            },
            "gigabits": {
                "bits": lambda x: x * 10**9,
                "bytes": lambda x: x * 10**9 / 8,
                "kilobits": lambda x: x * 10**6,
                "kilobytes": lambda x: x * 10**6 / 8,
                "megabits": lambda x: x * 1000,
                "megabytes": lambda x: x * 1000 / 8,
                "gigabits": lambda x: x,
                "gigabytes": lambda x: x / 8,
                "terabits": lambda x: x / 1000,
                "terabytes": lambda x: x / 8 / 1000,
                "petabits": lambda x: x / 10**6,
                "petabytes": lambda x: x / 8 / 10**6,
                "exabits": lambda x: x / 10**9,
                "exabytes": lambda x: x / 8 / 10**9,
                "zettabits": lambda x: x / 10**12,
                "zettabytes": lambda x: x / 8 / 10**12,
                "yottabits": lambda x: x / 10**15,
                "yottabytes": lambda x: x / 8 / 10**15,
            },
            "gigabytes": {
                "bits": lambda x: x * 8 * 10**9,
                "bytes": lambda x: x * 10**9,
                "kilobits": lambda x: x * 8 * 10**6,
                "kilobytes": lambda x: x * 10**6,
                "megabits": lambda x: x * 8 * 1000,
                "megabytes": lambda x: x * 1000,
                "gigabits": lambda x: x * 8,
                "gigabytes": lambda x: x,
                "terabits": lambda x: x * 8 / 1000,
                "terabytes": lambda x: x / 1000,
                "petabits": lambda x: x * 8 / 10**6,
                "petabytes": lambda x: x / 10**6,
                "exabits": lambda x: x * 8 / 10**9,
                "exabytes": lambda x: x / 10**9,
                "zettabits": lambda x: x * 8 / 10**12,
                "zettabytes": lambda x: x / 10**12,
                "yottabits": lambda x: x * 8 / 10**15,
                "yottabytes": lambda x: x / 10**15,
            },
            "terabits": {
                "bits": lambda x: x * 10**12,
                "bytes": lambda x: x * 10**12 / 8,
                "kilobits": lambda x: x * 10**9,
                "kilobytes": lambda x: x * 10**9 / 8,
                "megabits": lambda x: x * 10**6,
                "megabytes": lambda x: x * 10**6 / 8,
                "gigabits": lambda x: x * 1000,
                "gigabytes": lambda x: x * 1000 / 8,
                "terabits": lambda x: x,
                "terabytes": lambda x: x / 8,
                "petabits": lambda x: x / 1000,
                "petabytes": lambda x: x / 8 / 1000,
                "exabits": lambda x: x / 10**6,
                "exabytes": lambda x: x / 8 / 10**6,
                "zettabits": lambda x: x / 10**9,
                "zettabytes": lambda x: x / 8 / 10**9,
                "yottabits": lambda x: x / 10**12,
                "yottabytes": lambda x: x / 8 / 10**12,
            },
            "terabytes": {
                "bits": lambda x: x * 8 * 10**12,
                "bytes": lambda x: x * 10**12,
                "kilobits": lambda x: x * 8 * 10**9,
                "kilobytes": lambda x: x * 10**9,
                "megabits": lambda x: x * 8 * 10**6,
                "megabytes": lambda x: x * 10**6,
                "gigabits": lambda x: x * 8 * 1000,
                "gigabytes": lambda x: x * 1000,
                "terabits": lambda x: x * 8,
                "terabytes": lambda x: x,
                "petabits": lambda x: x * 8 / 1000,
                "petabytes": lambda x: x / 1000,
                "exabits": lambda x: x * 8 / 10**6,
                "exabytes": lambda x: x / 10**6,
                "zettabits": lambda x: x * 8 / 10**9,
                "zettabytes": lambda x: x / 10**9,
                "yottabits": lambda x: x * 8 / 10**12,
                "yottabytes": lambda x: x / 10**12,
            },
            "petabits": {
                "bits": lambda x: x * 10**15,
                "bytes": lambda x: x * 10**15 / 8,
                "kilobits": lambda x: x * 10**12,
                "kilobytes": lambda x: x * 10**12 / 8,
                "megabits": lambda x: x * 10**9,
                "megabytes": lambda x: x * 10**9 / 8,
                "gigabits": lambda x: x * 10**6,
                "gigabytes": lambda x: x * 10**6 / 8,
                "terabits": lambda x: x * 1000,
                "terabytes": lambda x: x * 1000 / 8,
                "petabits": lambda x: x,
                "petabytes": lambda x: x / 8,
                "exabits": lambda x: x / 1000,
                "exabytes": lambda x: x / 8 / 1000,
                "zettabits": lambda x: x / 10**6,
                "zettabytes": lambda x: x / 8 / 10**6,
                "yottabits": lambda x: x / 10**9,
                "yottabytes": lambda x: x / 8 / 10**9,
            },
            "petabytes": {
                "bits": lambda x: x * 8 * 10**15,
                "bytes": lambda x: x * 10**15,
                "kilobits": lambda x: x * 8 * 10**12,
                "kilobytes": lambda x: x * 10**12,
                "megabits": lambda x: x * 8 * 10**9,
                "megabytes": lambda x: x * 10**9,
                "gigabits": lambda x: x * 8 * 10**6,
                "gigabytes": lambda x: x * 10**6,
                "terabits": lambda x: x * 8 * 1000,
                "terabytes": lambda x: x * 1000,
                "petabits": lambda x: x * 8,
                "petabytes": lambda x: x,
                "exabits": lambda x: x * 8 / 1000,
                "exabytes": lambda x: x / 1000,
                "zettabits": lambda x: x * 8 / 10**6,
                "zettabytes": lambda x: x / 10**6,
                "yottabits": lambda x: x * 8 / 10**9,
                "yottabytes": lambda x: x / 10**9,
            },
            "exabits": {
                "bits": lambda x: x * 10**18,
                "bytes": lambda x: x * 10**18 / 8,
                "kilobits": lambda x: x * 10**15,
                "kilobytes": lambda x: x * 10**15 / 8,
                "megabits": lambda x: x * 10**12,
                "megabytes": lambda x: x * 10**12 / 8,
                "gigabits": lambda x: x * 10**9,
                "gigabytes": lambda x: x * 10**9 / 8,
                "terabits": lambda x: x * 10**6,
                "terabytes": lambda x: x * 10**6 / 8,
                "petabits": lambda x: x * 1000,
                "petabytes": lambda x: x * 1000 / 8,
                "exabits": lambda x: x,
                "exabytes": lambda x: x / 8,
                "zettabits": lambda x: x / 1000,
                "zettabytes": lambda x: x / 8 / 1000,
                "yottabits": lambda x: x / 10**6,
                "yottabytes": lambda x: x / 8 / 10**6,
            },
            "exabytes": {
                "bits": lambda x: x * 8 * 10**18,
                "bytes": lambda x: x * 10**18,
                "kilobits": lambda x: x * 8 * 10**15,
                "kilobytes": lambda x: x * 10**15,
                "megabits": lambda x: x * 8 * 10**12,
                "megabytes": lambda x: x * 10**12,
                "gigabits": lambda x: x * 8 * 10**9,
                "gigabytes": lambda x: x * 10**9,
                "terabits": lambda x: x * 8 * 10**6,
                "terabytes": lambda x: x * 10**6,
                "petabits": lambda x: x * 8 * 1000,
                "petabytes": lambda x: x * 1000,
                "exabits": lambda x: x * 8,
                "exabytes": lambda x: x,
                "zettabits": lambda x: x * 8 / 1000,
                "zettabytes": lambda x: x / 1000,
                "yottabits": lambda x: x * 8 / 10**6,
                "yottabytes": lambda x: x / 10**6,
            },
            "zettabits": {
                "bits": lambda x: x * 10**21,
                "bytes": lambda x: x * 10**21 / 8,
                "kilobits": lambda x: x * 10**18,
                "kilobytes": lambda x: x * 10**18 / 8,
                "megabits": lambda x: x * 10**15,
                "megabytes": lambda x: x * 10**15 / 8,
                "gigabits": lambda x: x * 10**12,
                "gigabytes": lambda x: x * 10**12 / 8,
                "terabits": lambda x: x * 10**9,
                "terabytes": lambda x: x * 10**9 / 8,
                "petabits": lambda x: x * 10**6,
                "petabytes": lambda x: x * 10**6 / 8,
                "exabits": lambda x: x * 1000,
                "exabytes": lambda x: x * 1000 / 8,
                "zettabits": lambda x: x,
                "zettabytes": lambda x: x / 8,
                "yottabits": lambda x: x / 1000,
                "yottabytes": lambda x: x / 8 / 1000,
            },
            "zettabytes": {
                "bits": lambda x: x * 8 * 10**21,
                "bytes": lambda x: x * 10**21,
                "kilobits": lambda x: x * 8 * 10**18,
                "kilobytes": lambda x: x * 10**18,
                "megabits": lambda x: x * 8 * 10**15,
                "megabytes": lambda x: x * 10**15,
                "gigabits": lambda x: x * 8 * 10**12,
                "gigabytes": lambda x: x * 10**12,
                "terabits": lambda x: x * 8 * 10**9,
                "terabytes": lambda x: x * 10**9,
                "petabits": lambda x: x * 8 * 10**6,
                "petabytes": lambda x: x * 10**6,
                "exabits": lambda x: x * 8 * 1000,
                "exabytes": lambda x: x * 1000,
                "zettabits": lambda x: x * 8,
                "zettabytes": lambda x: x,
                "yottabits": lambda x: x * 8 / 1000,
                "yottabytes": lambda x: x / 1000,
            },
            "yottabits": {
                "bits": lambda x: x * 10**24,
                "bytes": lambda x: x * 10**24 / 8,
                "kilobits": lambda x: x * 10**21,
                "kilobytes": lambda x: x * 10**21 / 8,
                "megabits": lambda x: x * 10**18,
                "megabytes": lambda x: x * 10**18 / 8,
                "gigabits": lambda x: x * 10**15,
                "gigabytes": lambda x: x * 10**15 / 8,
                "terabits": lambda x: x * 10**12,
                "terabytes": lambda x: x * 10**12 / 8,
                "petabits": lambda x: x * 10**9,
                "petabytes": lambda x: x * 10**9 / 8,
                "exabits": lambda x: x * 10**6,
                "exabytes": lambda x: x * 10**6 / 8,
                "zettabits": lambda x: x * 1000,
                "zettabytes": lambda x: x * 1000 / 8,
                "yottabits": lambda x: x,
                "yottabytes": lambda x: x / 8,
            },
            "yottabytes": {
                "bits": lambda x: x * 8 * 10**24,
                "bytes": lambda x: x * 10**24,
                "kilobits": lambda x: x * 8 * 10**21,
                "kilobytes": lambda x: x * 10**21,
                "megabits": lambda x: x * 8 * 10**18,
                "megabytes": lambda x: x * 10**18,
                "gigabits": lambda x: x * 8 * 10**15,
                "gigabytes": lambda x: x * 10**15,
                "terabits": lambda x: x * 8 * 10**12,
                "terabytes": lambda x: x * 10**12,
                "petabits": lambda x: x * 8 * 10**9,
                "petabytes": lambda x: x * 10**9,
                "exabits": lambda x: x * 8 * 10**6,
                "exabytes": lambda x: x * 10**6,
                "zettabits": lambda x: x * 8 * 1000,
                "zettabytes": lambda x: x * 1000,
                "yottabits": lambda x: x * 8,
                "yottabytes": lambda x: x,
            },
        }

    def get_formula(self, source_unit: str, target_unit: str) -> str:
        source_unit = source_unit.lower()
        target_unit = target_unit.lower()

        formulas = {
            "bits": {
                "bits": "x",
                "bytes": "x / 8",
                "kilobits": "x / 1000",
                "kilobytes": "x / 8000",
                "megabits": "x / 10^6",
                "megabytes": "x / 8 * 10^6",
                "gigabits": "x / 10^9",
                "gigabytes": "x / 8 * 10^9",
                "terabits": "x / 10^12",
                "terabytes": "x / 8 * 10^12",
                "petabits": "x / 10^15",
                "petabytes": "x / 8 * 10^15",
                "exabits": "x / 10^18",
                "exabytes": "x / 8 * 10^18",
                "zettabits": "x / 10^21",
                "zettabytes": "x / 8 * 10^21",
                "yottabits": "x / 10^24",
            },
            "bytes": {
                "bits": "x * 8",
                "bytes": "x",
                "kilobits": "x * 8 / 1000",
                "kilobytes": "x / 1024",
                "megabits": "x * 8 / 10^6",
                "megabytes": "x / (1024^2)",
                "gigabits": "x * 8 / 10^9",
                "gigabytes": "x / (1024^3)",
                "terabits": "x * 8 / 10^12",
                "terabytes": "x / (1024^4)",
                "petabits": "x * 8 / 10^15",
                "petabytes": "x / (1024^5)",
                "exabits": "x * 8 / 10^18",
                "exabytes": "x / (1024^6)",
                "zettabits": "x * 8 / 10^21",
                "zettabytes": "x / (1024^7)",
                "yottabits": "x * 8 / 10^24",
                "yottabytes": "x / (1024^8)",
            },
            "kilobits": {
                "bits": "x * 1000",
                "bytes": "x * 1000 / 8",
                "kilobits": "x",
                "kilobytes": "x / 8",
                "megabits": "x / 1000",
                "megabytes": "x / 8000",
                "gigabits": "x / 10^6",
                "gigabytes": "x / 8 * 10^6",
                "terabits": "x / 10^9",
                "terabytes": "x / 8 * 10^9",
                "petabits": "x / 10^12",
                "petabytes": "x / 8 * 10^12",
                "exabits": "x / 10^15",
                "exabytes": "x / 8 * 10^15",
                "zettabits": "x / 10^18",
                "zettabytes": "x / 8 * 10^18",
                "yottabits": "x / 10^21",
            },
            "kilobytes": {
                "bits": "x * 8000",
                "bytes": "x * 1024",
                "kilobits": "x * 8",
                "kilobytes": "x",
                "megabits": "x * 8 / 1000",
                "megabytes": "x / 1000",
                "gigabits": "x * 8 / 10^6",
                "gigabytes": "x / 10^6",
                "terabits": "x * 8 / 10^9",
                "terabytes": "x / 10^9",
                "petabits": "x * 8 / 10^12",
                "petabytes": "x / 10^12",
                "exabits": "x * 8 / 10^15",
                "exabytes": "x / 10^15",
                "zettabits": "x * 8 / 10^18",
                "zettabytes": "x / 10^18",
                "yottabits": "x * 8 / 10^21",
                "yottabytes": "x / 10^21",
            },
            "megabits": {
                "bits": "x * 10^6",
                "bytes": "x * 10^6 / 8",
                "kilobits": "x * 1000",
                "kilobytes": "x * 1000 / 8",
                "megabits": "x",
                "megabytes": "x / 8",
                "gigabits": "x / 1000",
                "gigabytes": "x / 8 * 1000",
                "terabits": "x / 10^6",
                "terabytes": "x / 8 * 10^6",
                "petabits": "x / 10^9",
                "petabytes": "x / 8 * 10^9",
                "exabits": "x / 10^12",
                "exabytes": "x / 8 * 10^12",
                "zettabits": "x / 10^15",
                "zettabytes": "x / 8 * 10^15",
                "yottabits": "x / 10^18",
                "yottabytes": "x / 8 * 10^18",
            },
            "megabytes": {
                "bits": "x * 8 * 10^6",
                "bytes": "x * 10^6",
                "kilobits": "x * 8 * 1000",
                "kilobytes": "x * 1000",
                "megabits": "x * 8",
                "megabytes": "x",
                "gigabits": "x * 8 / 1000",
                "gigabytes": "x / 1000",
                "terabits": "x * 8 / 10^6",
                "terabytes": "x / 10^6",
                "petabits": "x * 8 / 10^9",
                "petabytes": "x / 10^9",
                "exabits": "x * 8 / 10^12",
                "exabytes": "x / 10^12",
                "zettabits": "x * 8 / 10^15",
                "zettabytes": "x / 10^15",
                "yottabits": "x * 8 / 10^18",
                "yottabytes": "x / 10^18",
            },
            "gigabits": {
                "bits": "x * 10^9",
                "bytes": "x * 10^9 / 8",
                "kilobits": "x * 10^6",
                "kilobytes": "x * 10^6 / 8",
                "megabits": "x * 1000",
                "megabytes": "x * 1000 / 8",
                "gigabits": "x",
                "gigabytes": "x / 8",
                "terabits": "x / 1000",
                "terabytes": "x / 8 / 1000",
                "petabits": "x / 10^6",
                "petabytes": "x / 8 / 10^6",
                "exabits": "x / 10^9",
                "exabytes": "x / 8 / 10^9",
                "zettabits": "x / 10^12",
                "zettabytes": "x / 8 / 10^12",
                "yottabits": "x / 10^15",
                "yottabytes": "x / 8 / 10^15",
            },
            "gigabytes": {
                "bits": "x * 8 * 10^9",
                "bytes": "x * 10^9",
                "kilobits": "x * 8 * 10^6",
                "kilobytes": "x * 10^6",
                "megabits": "x * 8 * 1000",
                "megabytes": "x * 1000",
                "gigabits": "x * 8",
                "gigabytes": "x",
                "terabits": "x * 8 / 1000",
                "terabytes": "x / 1000",
                "petabits": "x * 8 / 10^6",
                "petabytes": "x / 10^6",
                "exabits": "x * 8 / 10^9",
                "exabytes": "x / 10^9",
                "zettabits": "x * 8 / 10^12",
                "zettabytes": "x / 10^12",
                "yottabits": "x * 8 / 10^15",
                "yottabytes": "x / 10^15",
            },
            "terabits": {
                "bits": "x * 10^12",
                "bytes": "x * 10^12 / 8",
                "kilobits": "x * 10^9",
                "kilobytes": "x * 10^9 / 8",
                "megabits": "x * 10^6",
                "megabytes": "x * 10^6 / 8",
                "gigabits": "x * 1000",
                "gigabytes": "x * 1000 / 8",
                "terabits": "x",
                "terabytes": "x / 8",
                "petabits": "x / 1000",
                "petabytes": "x / 8 / 1000",
                "exabits": "x / 10^6",
                "exabytes": "x / 8 / 10^6",
                "zettabits": "x / 10^9",
                "zettabytes": "x / 8 / 10^9",
                "yottabits": "x / 10^12",
                "yottabytes": "x / 8 / 10^12",
            },
            "terabytes": {
                "bits": "x * 8 * 10^12",
                "bytes": "x * 10^12",
                "kilobits": "x * 8 * 10^9",
                "kilobytes": "x * 10^9",
                "megabits": "x * 8 * 10^6",
                "megabytes": "x * 10^6",
                "gigabits": "x * 8 * 1000",
                "gigabytes": "x * 1000",
                "terabits": "x * 8",
                "terabytes": "x",
                "petabits": "x * 8 / 1000",
                "petabytes": "x / 1000",
                "exabits": "x * 8 / 10^6",
                "exabytes": "x / 10^6",
                "zettabits": "x * 8 / 10^9",
                "zettabytes": "x / 10^9",
                "yottabits": "x * 8 / 10^12",
                "yottabytes": "x / 10^12",
            },
            "petabits": {
                "bits": "x * 10^15",
                "bytes": "x * 10^15 / 8",
                "kilobits": "x * 10^12",
                "kilobytes": "x * 10^12 / 8",
                "megabits": "x * 10^9",
                "megabytes": "x * 10^9 / 8",
                "gigabits": "x * 10^6",
                "gigabytes": "x * 10^6 / 8",
                "terabits": "x * 1000",
                "terabytes": "x * 1000 / 8",
                "petabits": "x",
                "petabytes": "x / 8",
                "exabits": "x / 1000",
                "exabytes": "x / 8 / 1000",
                "zettabits": "x / 10^6",
                "zettabytes": "x / 8 / 10^6",
                "yottabits": "x / 10^9",
                "yottabytes": "x / 8 / 10^9",
            },
            "petabytes": {
                "bits": "x * 8 * 10^15",
                "bytes": "x * 10^15",
                "kilobits": "x * 8 * 10^12",
                "kilobytes": "x * 10^12",
                "megabits": "x * 8 * 10^9",
                "megabytes": "x * 10^9",
                "gigabits": "x * 8 * 10^6",
                "gigabytes": "x * 10^6",
                "terabits": "x * 8 * 1000",
                "terabytes": "x * 1000",
                "petabits": "x * 8",
                "petabytes": "x",
                "exabits": "x * 8 / 1000",
                "exabytes": "x / 1000",
                "zettabits": "x * 8 / 10^6",
                "zettabytes": "x / 10^6",
                "yottabits": "x * 8 / 10^9",
                "yottabytes": "x / 10^9",
            },
            "exabits": {
                "bits": "x * 10^18",
                "bytes": "x * 10^18 / 8",
                "kilobits": "x * 10^15",
                "kilobytes": "x * 10^15 / 8",
                "megabits": "x * 10^12",
                "megabytes": "x * 10^12 / 8",
                "gigabits": "x * 10^9",
                "gigabytes": "x * 10^9 / 8",
                "terabits": "x * 10^6",
                "terabytes": "x * 10^6 / 8",
                "petabits": "x * 1000",
                "petabytes": "x * 1000 / 8",
                "exabits": "x",
                "exabytes": "x / 8",
                "zettabits": "x / 1000",
                "zettabytes": "x / 8 / 1000",
                "yottabits": "x / 10^6",
                "yottabytes": "x / 8 / 10^6",
            },
            "exabytes": {
                "bits": "x * 8 * 10^18",
                "bytes": "x * 10^18",
                "kilobits": "x * 8 * 10^15",
                "kilobytes": "x * 10^15",
                "megabits": "x * 8 * 10^12",
                "megabytes": "x * 10^12",
                "gigabits": "x * 8 * 10^9",
                "gigabytes": "x * 10^9",
                "terabits": "x * 8 * 10^6",
                "terabytes": "x * 10^6",
                "petabits": "x * 8 * 1000",
                "petabytes": "x * 1000",
                "exabits": "x * 8",
                "exabytes": "x",
                "zettabits": "x * 8 / 1000",
                "zettabytes": "x / 1000",
                "yottabits": "x * 8 / 10^6",
                "yottabytes": "x / 10^6",
            },
            "zettabits": {
                "bits": "x * 10^21",
                "bytes": "x * 10^21 / 8",
                "kilobits": "x * 10^18",
                "kilobytes": "x * 10^18 / 8",
                "megabits": "x * 10^15",
                "megabytes": "x * 10^15 / 8",
                "gigabits": "x * 10^12",
                "gigabytes": "x * 10^12 / 8",
                "terabits": "x * 10^9",
                "terabytes": "x * 10^9 / 8",
                "petabits": "x * 10^6",
                "petabytes": "x * 10^6 / 8",
                "exabits": "x * 1000",
                "exabytes": "x * 1000 / 8",
                "zettabits": "x",
                "zettabytes": "x / 8",
                "yottabits": "x / 1000",
                "yottabytes": "x / 8 / 1000",
            },
            "zettabytes": {
                "bits": "x * 8 * 10^21",
                "bytes": "x * 10^21",
                "kilobits": "x * 8 * 10^18",
                "kilobytes": "x * 10^18",
                "megabits": "x * 8 * 10^15",
                "megabytes": "x * 10^15",
                "gigabits": "x * 8 * 10^12",
                "gigabytes": "x * 10^12",
                "terabits": "x * 8 * 10^9",
                "terabytes": "x * 10^9",
                "petabits": "x * 8 * 10^6",
                "petabytes": "x * 10^6",
                "exabits": "x * 8 * 1000",
                "exabytes": "x * 1000",
                "zettabits": "x * 8",
                "zettabytes": "x",
                "yottabits": "x * 8 / 1000",
                "yottabytes": "x / 1000",
            },
        }

        if source_unit in formulas and target_unit in formulas[source_unit]:
            formula = formulas[source_unit][target_unit]
            return formula
        else:
            return "Formule non disponible."

    def convert(self, computervalues, original_unit, unit):
        source_unit = original_unit.lower()
        target_unit = unit.lower()

        if (
            source_unit in self.conversions
            and target_unit in self.conversions[source_unit]
        ):
            conversion_func = self.conversions[source_unit][target_unit]
            return conversion_func(computervalues)
        else:
            raise ValueError("Unité cible non prise en charge.")

class ComputerValuesFrame(ConversionFrame):
    def __init__(self, parent, conversion_func, error_callback):
        super().__init__(parent, conversion_func, ConvertComputerValues.units, error_callback)

