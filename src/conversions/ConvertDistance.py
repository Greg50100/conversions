from conversions.conversion_frame import ConversionFrame
import math

class ConvertDistance:
    units = ["meter", "centimeter", "inches", "feet", "us_feet", "mils", "nautical miles", "yards", "mile", "millimeter", "micrometer", "nanometer", "angstroms", "picometer", "kilometer", "astronomical units", "light year", "parsecs"]
    
    def __init__(self, value=None):
        self.value = value
        self.unit_symbols = {
            "meter": "m",
            "centimeter": "cm",
            "inches": "in",
            "feet": "ft",
            "us_feet": "us_ft",
            "mils": "mil",
            "nautical miles": "nmi",
            "yards": "yd",
            "mile": "mi",
            "millimeter": "mm",
            "micrometer": "µm",
            "nanometer": "nm",
            "angstroms": "Å",
            "picometer": "pm",
            "kilometer": "km",
            "astronomical units": "au",
            "light year": "ly",
            "parsecs": "pc"
        }
        self.conversions = {
            "meter": {
                "meter": lambda x: x,
                "centimeter": lambda x: x * 100,
                "inches": lambda x: x / 0.0254,
                "feet": lambda x: x / 0.3048,
                "us_feet": lambda x: x / 0.30480061,
                "mils": lambda x: x / 2.54e-5,
                "nautical miles": lambda x: x / 1852,
                "yards": lambda x: x / 0.9144,
                "mile": lambda x: x / 1609.34,
                "millimeter": lambda x: x * 1000,
                "micrometer": lambda x: x * 1e6,
                "nanometer": lambda x: x * 1e9,
                "angstroms": lambda x: x * 1e10,
                "picometer": lambda x: x * 1e12,
                "kilometer": lambda x: x / 1000,
                "astronomical units": lambda x: x / 1.496e+11,
                "light year": lambda x: x / 9.461e+15,
                "parsecs": lambda x: x / 3.086e+16,
            },
            "centimeter": {
                "meter": lambda x: x / 100,
                "centimeter": lambda x: x,
                "inches": lambda x: x / 2.54,
                "feet": lambda x: x / 30.48,
                "us_feet": lambda x: x / 30.480061,
                "mils": lambda x: x / 0.000254,
                "nautical miles": lambda x: x / 185200,
                "yards": lambda x: x / 91.44,
                "mile": lambda x: x / 160934.4,
                "millimeter": lambda x: x * 10,
                "micrometer": lambda x: x * 1e4,
                "nanometer": lambda x: x * 1e7,
                "angstroms": lambda x: x * 1e8,
                "picometer": lambda x: x * 1e10,
                "kilometer": lambda x: x / 1e5,
                "astronomical units": lambda x: x / 1.496e13,
                "light year": lambda x: x / 9.461e17,
                "parsecs": lambda x: x / 3.086e18,
            },
            "inches": {
                "meter": lambda x: x * 0.0254,
                "centimeter": lambda x: x * 2.54,
                "inches": lambda x: x,
                "feet": lambda x: x / 12,
                "us_feet": lambda x: x / 12.0003048,
                "mils": lambda x: x * 1000,
                "nautical miles": lambda x: x / 72913.3858,
                "yards": lambda x: x / 36,
                "mile": lambda x: x / 63360,
                "millimeter": lambda x: x * 25.4,
                "micrometer": lambda x: x * 25400,
                "nanometer": lambda x: x * 2.54e7,
                "angstroms": lambda x: x * 2.54e8,
                "picometer": lambda x: x * 2.54e10,
                "kilometer": lambda x: x / 39370.1,
                "astronomical units": lambda x: x / 9.295e+11,
                "light year": lambda x: x / 5.8786e+15,
                "parsecs": lambda x: x / 1.9184e+16,
            },
            "feet": {
                "meter": lambda x: x * 0.3048,
                "centimeter": lambda x: x * 30.48,
                "inches": lambda x: x * 12,
                "feet": lambda x: x,
                "us_feet": lambda x: x / 0.999998,
                "mils": lambda x: x * 12000,
                "nautical miles": lambda x: x / 6076.12,
                "yards": lambda x: x / 3,
                "mile": lambda x: x / 5280,
                "millimeter": lambda x: x * 304.8,
                "micrometer": lambda x: x * 304800,
                "nanometer": lambda x: x * 3.048e+8,
                "angstroms": lambda x: x * 3.048e+9,
                "picometer": lambda x: x * 3.048e+11,
                "kilometer": lambda x: x / 3280.84,
                "astronomical units": lambda x: x / 9.331e+11,
                "light year": lambda x: x / 5.879e+15,
                "parsecs": lambda x: x / 1.918e+16,
            },
            "us_feet": {
                "meter": lambda x: x * 0.30480061,
                "centimeter": lambda x: x * 30.480061,
                "inches": lambda x: x * 12.0003048,
                "feet": lambda x: x * 1.000002,
                "us_feet": lambda x: x,
                "mils": lambda x: x * 12000.036576,
                "nautical miles": lambda x: x / 6076.11549,
                "yards": lambda x: x / 3.000001,
                "mile": lambda x: x / 5280.019685,
                "millimeter": lambda x: x * 304.80061,
                "micrometer": lambda x: x * 304800.61,
                "nanometer": lambda x: x * 3.0480061e8,
                "angstroms": lambda x: x * 3.0480061e9,
                "picometer": lambda x: x * 3.0480061e11,
                "kilometer": lambda x: x / 3280.839895,
                "astronomical units": lambda x: x / 2.0374621e+11,
                "light year": lambda x: x / 1.8658137e+16,
                "parsecs": lambda x: x / 6.0960077e+16,
            },
            "mils": {
                "meter": lambda x: x * 2.54e-5,
                "centimeter": lambda x: x * 0.00254,
                "inches": lambda x: x / 1000,
                "feet": lambda x: x / 12000,
                "us_feet": lambda x: x / 12000.036576,
                "mils": lambda x: x,
                "nautical miles": lambda x: x / 5.0800109e+7,
                "yards": lambda x: x / 36000,
                "mile": lambda x: x / 6.336e+7,
                "millimeter": lambda x: x * 0.0254,
                "micrometer": lambda x: x * 25.4,
                "nanometer": lambda x: x * 2.54e4,
                "angstroms": lambda x: x * 2.54e5,
                "picometer": lambda x: x * 2.54e7,
                "kilometer": lambda x: x / 3.9370079e+7,
                "astronomical units": lambda x: x / 9.461e+17,
                "light year": lambda x: x / 5.8786254e+21,
                "parsecs": lambda x: x / 1.9181392e+22,
            },
            "nautical miles": {
                "meter": lambda x: x * 1852,
                "centimeter": lambda x: x * 185200,
                "inches": lambda x: x * 72913.3858,
                "feet": lambda x: x * 6076.12,
                "us_feet": lambda x: x * 6076.11549,
                "mils": lambda x: x * 7.29133858e+7,
                "nautical miles": lambda x: x,
                "yards": lambda x: x * 2025.37,
                "mile": lambda x: x * 1.15078,
                "millimeter": lambda x: x * 1.852e6,
                "micrometer": lambda x: x * 1.852e9,
                "nanometer": lambda x: x * 1.852e12,
                "angstroms": lambda x: x * 1.852e15,
                "picometer": lambda x: x * 1.852e18,
                "kilometer": lambda x: x * 1.852,
                "astronomical units": lambda x: x / 8.078e+7,
                "light year": lambda x: x / 5.107e+12,
                "parsecs": lambda x: x / 1.664e+13,
            },
            "yards": {
                "meter": lambda x: x * 0.9144,
                "centimeter": lambda x: x * 91.44,
                "inches": lambda x: x * 36,
                "feet": lambda x: x * 3,
                "us_feet": lambda x: x * 3.000009,
                "mils": lambda x: x * 36000,
                "nautical miles": lambda x: x / 2025.37,
                "yards": lambda x: x,
                "mile": lambda x: x / 1760,
                "millimeter": lambda x: x * 914.4,
                "micrometer": lambda x: x * 914400,
                "nanometer": lambda x: x * 9.144e8,
                "angstroms": lambda x: x * 9.144e9,
                "picometer": lambda x: x * 9.144e11,
                "kilometer": lambda x: x / 1093.61,
                "astronomical units": lambda x: x / 6.6846e+11,
                "light year": lambda x: x / 5.8786e+15,
                "parsecs": lambda x: x / 1.9184e+16,
            },
            "mile": {
                "meter": lambda x: x * 1609.34,
                "centimeter": lambda x: x * 160934,
                "inches": lambda x: x * 63360,
                "feet": lambda x: x * 5280,
                "us_feet": lambda x: x * 5280.02,
                "mils": lambda x: x * 63360000,
                "nautical miles": lambda x: x / 1.15078,
                "yards": lambda x: x * 1760,
                "mile": lambda x: x,
                "millimeter": lambda x: x * 1.609e6,
                "micrometer": lambda x: x * 1.609e9,
                "nanometer": lambda x: x * 1.609e12,
                "angstroms": lambda x: x * 1.609e13,
                "picometer": lambda x: x * 1.609e15,
                "kilometer": lambda x: x * 1.60934,
                "astronomical units": lambda x: x / 9.295e+11,
                "light year": lambda x: x / 5.8786e+15,
                "parsecs": lambda x: x / 1.9184e+16,
            },
            "millimeter": {
                "meter": lambda x: x / 1000,
                "centimeter": lambda x: x / 10,
                "inches": lambda x: x / 25.4,
                "feet": lambda x: x / 304.8,
                "us_feet": lambda x: x / 304.80061,
                "mils": lambda x: x / 0.0254,
                "nautical miles": lambda x: x / 1.852e6,
                "yards": lambda x: x / 914.4,
                "mile": lambda x: x / 1.609e6,
                "millimeter": lambda x: x,
                "micrometer": lambda x: x * 1000,
                "nanometer": lambda x: x * 1e6,
                "angstroms": lambda x: x * 1e7,
                "picometer": lambda x: x * 1e9,
                "kilometer": lambda x: x / 1e6,
                "astronomical units": lambda x: x / 1.496e+17,
                "light year": lambda x: x / 9.461e+21,
                "parsecs": lambda x: x / 3.086e+22,
            },
            "micrometer": {
                "meter": lambda x: x / 1e6,
                "centimeter": lambda x: x / 1e4,
                "inches": lambda x: x / 2.54e4,
                "feet": lambda x: x / 3.048e5,
                "us_feet": lambda x: x / 3.0480061e5,
                "mils": lambda x: x / 25.4,
                "nautical miles": lambda x: x / 1.852e9,
                "yards": lambda x: x / 9.144e5,
                "mile": lambda x: x / 1.609e9,
                "millimeter": lambda x: x / 1000,
                "micrometer": lambda x: x,
                "nanometer": lambda x: x * 1000,
                "angstroms": lambda x: x * 1e4,
                "picometer": lambda x: x * 1e6,
                "kilometer": lambda x: x / 1e9,
                "astronomical units": lambda x: x / 1.496e+20,
                "light year": lambda x: x / 9.461e+24,
                "parsecs": lambda x: x / 3.086e+25,
            },
            "nanometer": {
                "meter": lambda x: x / 1e9,
                "centimeter": lambda x: x / 1e7,
                "inches": lambda x: x / 2.54e7,
                "feet": lambda x: x / 3.048e8,
                "us_feet": lambda x: x / 3.0480061e8,
                "mils": lambda x: x / 2.54e4,
                "nautical miles": lambda x: x / 1.852e12,
                "yards": lambda x: x / 9.144e8,
                "mile": lambda x: x / 1.609e12,
                "millimeter": lambda x: x / 1e6,
                "micrometer": lambda x: x / 1000,
                "nanometer": lambda x: x,
                "angstroms": lambda x: x / 10,
                "picometer": lambda x: x * 1000,
                "kilometer": lambda x: x / 1e12,
                "astronomical units": lambda x: x / 1.496e+20,
                "light year": lambda x: x / 9.461e+24,
                "parsecs": lambda x: x / 3.086e+25,
            },
            "angstroms": {
                "meter": lambda x: x / 1e10,
                "centimeter": lambda x: x / 1e8,
                "inches": lambda x: x / 2.54e8,
                "feet": lambda x: x / 3.048e9,
                "us_feet": lambda x: x / 3.0480061e9,
                "mils": lambda x: x / 2.54e5,
                "nautical miles": lambda x: x / 1.852e13,
                "yards": lambda x: x / 9.144e9,
                "mile": lambda x: x / 1.609e13,
                "millimeter": lambda x: x / 1e7,
                "micrometer": lambda x: x / 1e4,
                "nanometer": lambda x: x * 10,
                "angstroms": lambda x: x,
                "picometer": lambda x: x * 1e4,
                "kilometer": lambda x: x / 1e13,
                "astronomical units": lambda x: x / 1.496e+21,
                "light year": lambda x: x / 9.461e+25,
                "parsecs": lambda x: x / 3.086e+26,
            },
            "picometer": {
                "meter": lambda x: x / 1e12,
                "centimeter": lambda x: x / 1e10,
                "inches": lambda x: x / 2.54e10,
                "feet": lambda x: x / 3.048e11,
                "us_feet": lambda x: x / 3.0480061e11,
                "mils": lambda x: x / 2.54e7,
                "nautical miles": lambda x: x / 1.852e15,
                "yards": lambda x: x / 9.144e11,
                "mile": lambda x: x / 1.609e15,
                "millimeter": lambda x: x / 1e9,
                "micrometer": lambda x: x / 1e6,
                "nanometer": lambda x: x / 1000,
                "angstroms": lambda x: x / 100,
                "picometer": lambda x: x,
                "kilometer": lambda x: x / 1e15,
                "astronomical units": lambda x: x / 1.496e+23,
                "light year": lambda x: x / 9.461e+27,
                "parsecs": lambda x: x / 3.086e+28,
            },
            "kilometer": {
                "meter": lambda x: x * 1000,
                "centimeter": lambda x: x * 1e5,
                "inches": lambda x: x * 39370.1,
                "feet": lambda x: x * 3280.84,
                "us_feet": lambda x: x * 3280.8399,
                "mils": lambda x: x * 3.937e7,
                "nautical miles": lambda x: x / 1.852,
                "yards": lambda x: x * 1093.61,
                "mile": lambda x: x / 1.60934,
                "millimeter": lambda x: x * 1e6,
                "micrometer": lambda x: x * 1e9,
                "nanometer": lambda x: x * 1e12,
                "angstroms": lambda x: x * 1e13,
                "picometer": lambda x: x * 1e15,
                "kilometer": lambda x: x,
                "astronomical units": lambda x: x / 1.496e+8,
                "light year": lambda x: x / 9.461e+12,
                "parsecs": lambda x: x / 3.086e+13,
            },
            "astronomical units": {
                "meter": lambda x: x * 1.496e+11,
                "centimeter": lambda x: x * 1.496e+13,
                "inches": lambda x: x * 5.889e+12,
                "feet": lambda x: x * 4.908e+11,
                "us_feet": lambda x: x * 4.908e+11,
                "mils": lambda x: x * 5.889e+15,
                "nautical miles": lambda x: x * 8.078e+7,
                "yards": lambda x: x * 1.636e+11,
                "mile": lambda x: x * 9.295e+7,
                "millimeter": lambda x: x * 1.496e+14,
                "micrometer": lambda x: x * 1.496e+17,
                "nanometer": lambda x: x * 1.496e+20,
                "angstroms": lambda x: x * 1.496e+23,
                "picometer": lambda x: x * 1.496e+26,
                "kilometer": lambda x: x * 1.496e+8,
                "astronomical units": lambda x: x,
                "light year": lambda x: x / 6.324e+4,
                "parsecs": lambda x: x / 2.0626e+5,
            },
            "light year": {
                "meter": lambda x: x * 9.461e+15,
                "centimeter": lambda x: x * 9.461e+17,
                "inches": lambda x: x * 3.724e+17,
                "feet": lambda x: x * 3.104e+16,
                "us_feet": lambda x: x * 3.104e+16,
                "mils": lambda x: x * 3.724e+20,
                "nautical miles": lambda x: x * 5.107e+12,
                "yards": lambda x: x * 1.035e+16,
                "mile": lambda x: x * 5.879e+12,
                "millimeter": lambda x: x * 9.461e+18,
                "micrometer": lambda x: x * 9.461e+21,
                "nanometer": lambda x: x * 9.461e+24,
                "angstroms": lambda x: x * 9.461e+25,
                "picometer": lambda x: x * 9.461e+28,
                "kilometer": lambda x: x * 9.461e+12,
                "astronomical units": lambda x: x * 6.324e+4,
                "light year": lambda x: x,
                "parsecs": lambda x: x / 3.262,
            },
            "parsecs": {
                "meter": lambda x: x * 3.086e+16,
                "centimeter": lambda x: x * 3.086e+18,
                "inches": lambda x: x * 1.214e+18,
                "feet": lambda x: x * 1.012e+17,
                "us_feet": lambda x: x * 1.012e+17,
                "mils": lambda x: x * 1.214e+21,
                "nautical miles": lambda x: x * 1.664e+13,
                "yards": lambda x: x * 3.374e+16,
                "mile": lambda x: x * 1.918e+13,
                "millimeter": lambda x: x * 3.086e+19,
                "micrometer": lambda x: x * 3.086e+22,
                "nanometer": lambda x: x * 3.086e+25,
                "angstroms": lambda x: x * 3.086e+26,
                "picometer": lambda x: x * 3.086e+29,
                "kilometer": lambda x: x * 3.086e+13,
                "astronomical units": lambda x: x * 2.0626e+5,
                "light year": lambda x: x * 3.262,
                "parsecs": lambda x: x,
            }
        }
        
    def get_formula(self, source_unit: str, target_unit: str) -> str:
        source_unit = source_unit.lower()
        target_unit = target_unit.lower()

        formulas = {
            "meter": {
                "meter": "x",
                "centimeter": "x * 100",
                "inches": "x / 0.0254",
                "feet": "x / 0.3048",
                "us_feet": "x / 0.30480061",
                "mils": "x / 2.54e-5",
                "nautical miles": "x / 1852",
                "yards": "x / 0.9144",
                "mile": "x / 1609.34",
                "millimeter": "x * 1000",
                "micrometer": "x * 1e6",
                "nanometer": "x * 1e9",
                "angstroms": "x * 1e10",
                "picometer": "x * 1e12",
                "kilometer": "x / 1000",
                "astronomical units": "x / 1.496e+11",
                "light year": "x / 9.461e+15",
                "parsecs": "x / 3.086e+16",
            },
            "centimeter": {
                "meter": "x / 100",
                "centimeter": "x",
                "inches": "x / 2.54",
                "feet": "x / 30.48",
                "us_feet": "x / 30.480061",
                "mils": "x / 0.000254",
                "nautical miles": "x / 185200",
                "yards": "x / 91.44",
                "mile": "x / 160934.4",
                "millimeter": "x * 10",
                "micrometer": "x * 1e4",
                "nanometer": "x * 1e7",
                "angstroms": "x * 1e8",
                "picometer": "x * 1e10",
                "kilometer": "x / 1e5",
                "astronomical units": "x / 1.496e13",
                "light year": "x / 9.461e17",
                "parsecs": "x / 3.086e18",
            },
            "inches": {
                "meter": "x * 0.0254",
                "centimeter": "x * 2.54",
                "inches": "x",
                "feet": "x / 12",
                "us_feet": "x / 12.0003048",
                "mils": "x * 1000",
                "nautical miles": "x / 72913.3858",
                "yards": "x / 36",
                "mile": "x / 63360",
                "millimeter": "x * 25.4",
                "micrometer": "x * 25400",
                "nanometer": "x * 2.54e7",
                "angstroms": "x * 2.54e8",
                "picometer": "x * 2.54e10",
                "kilometer": "x / 39370.1",
                "astronomical units": "x / 9.295e+11",
                "light year": "x / 5.8786e+15",
                "parsecs": "x / 1.9184e+16",
            },
            "feet": {
                "meter": "x * 0.3048",
                "centimeter": "x * 30.48",
                "inches": "x * 12",
                "feet": "x",
                "us_feet": "x / 0.999998",
                "mils": "x * 12000",
                "nautical miles": "x / 6076.12",
                "yards": "x / 3",
                "mile": "x / 5280",
                "millimeter": "x * 304.8",
                "micrometer": "x * 304800",
                "nanometer": "x * 3.048e+8",
                "angstroms": "x * 3.048e+9",
                "picometer": "x * 3.048e+11",
                "kilometer": "x / 3280.84",
                "astronomical units": "x / 9.331e+11",
                "light year": "x / 5.879e+15",
                "parsecs": "x / 1.918e+16",
            },
            "us_feet": {
                "meter": "x * 0.30480061",
                "centimeter": "x * 30.480061",
                "inches": "x * 12.0003048",
                "feet": "x * 1.000002",
                "us_feet": "x",
                "mils": "x * 12000.036576",
                "nautical miles": "x / 6076.11549",
                "yards": "x / 3.000001",
                "mile": "x / 5280.019685",
                "millimeter": "x * 304.80061",
                "micrometer": "x * 304800.61",
                "nanometer": "x * 3.0480061e8",
                "angstroms": "x * 3.0480061e9",
                "picometer": "x * 3.0480061e11",
                "kilometer": "x / 3280.839895",
                "astronomical units": "x / 2.0374621e+11",
                "light year": "x / 1.8658137e+16",
                "parsecs": "x / 6.0960077e+16",
            },
            "mils": {
                "meter": "x * 2.54e-5",
                "centimeter": "x * 0.00254",
                "inches": "x / 1000",
                "feet": "x / 12000",
                "us_feet": "x / 12000.036576",
                "mils": "x",
                "nautical miles": "x / 5.0800109e+7",
                "yards": "x / 36000",
                "mile": "x / 6.336e+7",
                "millimeter": "x * 0.0254",
                "micrometer": "x * 25.4",
                "nanometer": "x * 2.54e4",
                "angstroms": "x * 2.54e5",
                "picometer": "x * 2.54e7",
                "kilometer": "x / 3.9370079e+7",
                "astronomical units": "x / 9.461e+17",
                "light year": "x / 5.8786254e+21",
                "parsecs": "x / 1.9181392e+22",
            },
            "nautical miles": {
                "meter": "x * 1852",
                "centimeter": "x * 185200",
                "inches": "x * 72913.3858",
                "feet": "x * 6076.12",
                "us_feet": "x * 6076.11549",
                "mils": "x * 7.29133858e+7",
                "nautical miles": "x",
                "yards": "x * 2025.37",
                "mile": "x * 1.15078",
                "millimeter": "x * 1.852e6",
                "micrometer": "x * 1.852e9",
                "nanometer": "x * 1.852e12",
                "angstroms": "x * 1.852e15",
                "picometer": "x * 1.852e18",
                "kilometer": "x * 1.852",
                "astronomical units": "x / 8.078e+7",
                "light year": "x / 5.107e+12",
                "parsecs": "x / 1.664e+13",
            },
            "yards": {
                "meter": "x * 0.9144",
                "centimeter": "x * 91.44",
                "inches": "x * 36",
                "feet": "x * 3",
                "us_feet": "x * 3.000009",
                "mils": "x * 36000",
                "nautical miles": "x / 2025.37",
                "yards": "x",
                "mile": "x / 1760",
                "millimeter": "x * 914.4",
                "micrometer": "x * 914400",
                "nanometer": "x * 9.144e8",
                "angstroms": "x * 9.144e9",
                "picometer": "x * 9.144e11",
                "kilometer": "x / 1093.61",
                "astronomical units": "x / 6.6846e+11",
                "light year": "x / 5.8786e+15",
                "parsecs": "x / 1.9184e+16",
            },
            "mile": {
                "meter": "x * 1609.34",
                "centimeter": "x * 160934",
                "inches": "x * 63360",
                "feet": "x * 5280",
                "us_feet": "x * 5280.02",
                "mils": "x * 63360000",
                "nautical miles": "x / 1.15078",
                "yards": "x * 1760",
                "mile": "x",
                "millimeter": "x * 1.609e6",
                "micrometer": "x * 1.609e9",
                "nanometer": "x * 1.609e12",
                "angstroms": "x * 1.609e13",
                "picometer": "x * 1.609e15",
                "kilometer": "x * 1.60934",
                "astronomical units": "x / 9.295e+11",
                "light year": "x / 5.8786e+15",
                "parsecs": "x / 1.9184e+16",
            },
            "millimeter": {
                "meter": "x / 1000",
                "centimeter": "x / 10",
                "inches": "x / 25.4",
                "feet": "x / 304.8",
                "us_feet": "x / 304.80061",
                "mils": "x / 0.0254",
                "nautical miles": "x / 1.852e6",
                "yards": "x / 914.4",
                "mile": "x / 1.609e6",
                "millimeter": "x",
                "micrometer": "x * 1000",
                "nanometer": "x * 1e6",
                "angstroms": "x * 1e7",
                "picometer": "x * 1e9",
                "kilometer": "x / 1e6",
                "astronomical units": "x / 1.496e+17",
                "light year": "x / 9.461e+21",
                "parsecs": "x / 3.086e+22",
            },
            "micrometer": {
                "meter": "x / 1e6",
                "centimeter": "x / 1e4",
                "inches": "x / 2.54e4",
                "feet": "x / 3.048e5",
                "us_feet": "x / 3.0480061e5",
                "mils": "x / 25.4",
                "nautical miles": "x / 1.852e9",
                "yards": "x / 9.144e5",
                "mile": "x / 1.609e9",
                "millimeter": "x / 1000",
                "micrometer": "x",
                "nanometer": "x * 1000",
                "angstroms": "x * 1e4",
                "picometer": "x * 1e6",
                "kilometer": "x / 1e9",
                "astronomical units": "x / 1.496e+20",
                "light year": "x / 9.461e+24",
                "parsecs": "x / 3.086e+25",
            },
            "nanometer": {
                "meter": "x / 1e9",
                "centimeter": "x / 1e7",
                "inches": "x / 2.54e7",
                "feet": "x / 3.048e8",
                "us_feet": "x / 3.0480061e8",
                "mils": "x / 2.54e4",
                "nautical miles": "x / 1.852e12",
                "yards": "x / 9.144e8",
                "mile": "x / 1.609e12",
                "millimeter": "x / 1e6",
                "micrometer": "x / 1000",
                "nanometer": "x",
                "angstroms": "x / 10",
                "picometer": "x * 1000",
                "kilometer": "x / 1e12",
                "astronomical units": "x / 1.496e+20",
                "light year": "x / 9.461e+24",
                "parsecs": "x / 3.086e+25",
            },
            "angstroms": {
                "meter": "x / 1e10",
                "centimeter": "x / 1e8",
                "inches": "x / 2.54e8",
                "feet": "x / 3.048e9",
                "us_feet": "x / 3.0480061e9",
                "mils": "x / 2.54e5",
                "nautical miles": "x / 1.852e13",
                "yards": "x / 9.144e9",
                "mile": "x / 1.609e13",
                "millimeter": "x / 1e7",
                "micrometer": "x / 1e4",
                "nanometer": "x * 10",
                "angstroms": "x",
                "picometer": "x * 1e4",
                "kilometer": "x / 1e13",
                "astronomical units": "x / 1.496e+21",
                "light year": "x / 9.461e+25",
                "parsecs": "x / 3.086e+26",
            },
            "picometer": {
                "meter": "x / 1e12",
                "centimeter": "x / 1e10",
                "inches": "x / 2.54e10",
                "feet": "x / 3.048e11",
                "us_feet": "x / 3.0480061e11",
                "mils": "x / 2.54e7",
                "nautical miles": "x / 1.852e15",
                "yards": "x / 9.144e11",
                "mile": "x / 1.609e15",
                "millimeter": "x / 1e9",
                "micrometer": "x / 1e6",
                "nanometer": "x / 1000",
                "angstroms": "x / 100",
                "picometer": "x",
                "kilometer": "x / 1e15",
                "astronomical units": "x / 1.496e+23",
                "light year": "x / 9.461e+27",
                "parsecs": "x / 3.086e+28",
            },
            "kilometer": {
                "meter": "x * 1000",
                "centimeter": "x * 1e5",
                "inches": "x * 39370.1",
                "feet": "x * 3280.84",
                "us_feet": "x * 3280.8399",
                "mils": "x * 3.937e7",
                "nautical miles": "x / 1.852",
                "yards": "x * 1093.61",
                "mile": "x / 1.60934",
                "millimeter": "x * 1e6",
                "micrometer": "x * 1e9",
                "nanometer": "x * 1e12",
                "angstroms": "x * 1e13",
                "picometer": "x * 1e15",
                "kilometer": "x",
                "astronomical units": "x / 1.496e+8",
                "light year": "x / 9.461e+12",
                "parsecs": "x / 3.086e+13",
            },
            "astronomical units": {
                "meter": "x * 1.496e+11",
                "centimeter": "x * 1.496e+13",
                "inches": "x * 5.889e+12",
                "feet": "x * 4.908e+11",
                "us_feet": "x * 4.908e+11",
                "mils": "x * 5.889e+15",
                "nautical miles": "x * 8.078e+7",
                "yards": "x * 1.636e+11",
                "mile": "x * 9.295e+7",
                "millimeter": "x * 1.496e+14",
                "micrometer": "x * 1.496e+17",
                "nanometer": "x * 1.496e+20",
                "angstroms": "x * 1.496e+23",
                "picometer": "x * 1.496e+26",
                "kilometer": "x * 1.496e+8",
                "astronomical units": "x",
                "light year": "x / 6.324e+4",
                "parsecs": "x / 2.0626e+5",
            },
            "light year": {
                "meter": "x * 9.461e+15",
                "centimeter": "x * 9.461e+17",
                "inches": "x * 3.724e+17",
                "feet": "x * 3.104e+16",
                "us_feet": "x * 3.104e+16",
                "mils": "x * 3.724e+20",
                "nautical miles": "x * 5.107e+12",
                "yards": "x * 1.035e+16",
                "mile": "x * 5.879e+12",
                "millimeter": "x * 9.461e+18",
                "micrometer": "x * 9.461e+21",
                "nanometer": "x * 9.461e+24",
                "angstroms": "x * 9.461e+25",
                "picometer": "x * 9.461e+28",
                "kilometer": "x * 9.461e+12",
                "astronomical units": "x * 6.324e+4",
                "light year": "x",
                "parsecs": "x / 3.262",
            },
            "parsecs": {
                "meter": "x * 3.086e+16",
                "centimeter": "x * 3.086e+18",
                "inches": "x * 1.214e+18",
                "feet": "x * 1.012e+17",
                "us_feet": "x * 1.012e+17",
                "mils": "x * 1.214e+21",
                "nautical miles": "x * 1.664e+13",
                "yards": "x * 3.374e+16",
                "mile": "x * 1.918e+13",
                "millimeter": "x * 3.086e+19",
                "micrometer": "x * 3.086e+22",
                "nanometer": "x * 3.086e+25",
                "angstroms": "x * 3.086e+26",
                "picometer": "x * 3.086e+29",
                "kilometer": "x * 3.086e+13",
                "astronomical units": "x * 2.0626e+5",
                "light year": "x * 3.262",
                "parsecs": "x",
            }
        }

        if source_unit in formulas and target_unit in formulas[source_unit]:
            formula = formulas[source_unit][target_unit]
            return formula
        else:
            return "Formule non disponible."

    def convert(self, distance, original_unit, unit):
        source_unit = original_unit.lower()
        target_unit = unit.lower()

        if (
            source_unit in self.conversions
            and target_unit in self.conversions[source_unit]
        ):
            conversion_func = self.conversions[source_unit][target_unit]
            return conversion_func(distance)
        else:
            raise ValueError("Unité cible non prise en charge.")

class DistanceFrame(ConversionFrame):
    def __init__(self, parent, conversion_func, error_callback):
        super().__init__(parent, conversion_func, ConvertDistance.units, error_callback)


